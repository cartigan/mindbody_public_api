# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # EnrollmentController
  class EnrollmentController < BaseController
    # Returns a list of enrollments. An enrollment is a service, such as a
    # workshop or an event, that a staff member offers to multiple students, who
    # commit to coming to all or most of the scheduled sessions. Enrollments
    # typically run for a limited time only.
    # 
    # When a user token is not passed with the request or the passed user token
    # has insufficient viewing permissions, only the following staff data is
    # returned in the response:
    # 
    # * FirstName
    # * LastName
    # * Id
    # * Bio
    # * DisplayName
    # * ImageUrl
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Array[Integer]] request_class_schedule_ids Optional parameter: A
    # list of the requested class schedule IDs. If omitted, all class schedule
    # IDs return.
    # @param [DateTime] request_end_date Optional parameter: The end of the date
    # range. The response returns any active enrollments that occur on or before
    # this day.<br />  Default: **StartDate**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Array[Integer]] request_location_ids Optional parameter: List of
    # the IDs for the requested locations. If omitted, all location IDs
    # return.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_program_ids Optional parameter: List of
    # the IDs for the requested programs. If omitted, all program IDs return.
    # @param [Array[Integer]] request_session_type_ids Optional parameter: List
    # of the IDs for the requested session types. If omitted, all session types
    # IDs return.
    # @param [Array[Integer]] request_staff_ids Optional parameter: List of the
    # IDs for the requested staff IDs. If omitted, all staff IDs return.
    # @param [DateTime] request_start_date Optional parameter: The start of the
    # date range. The response returns any active enrollments that occur on or
    # after this day.<br />  Default: **todayâ€™s date**
    # @return [GetEnrollmentsResponse] response from the API call
    def get_enrollments(version,
                        site_id,
                        authorization: nil,
                        request_class_schedule_ids: nil,
                        request_end_date: nil,
                        request_limit: nil,
                        request_location_ids: nil,
                        request_offset: nil,
                        request_program_ids: nil,
                        request_session_type_ids: nil,
                        request_staff_ids: nil,
                        request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/enrollment/enrollments',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_class_schedule_ids, key: 'request.classScheduleIds'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_ids, key: 'request.locationIds'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_program_ids, key: 'request.programIds'))
                   .query_param(new_parameter(request_session_type_ids, key: 'request.sessionTypeIds'))
                   .query_param(new_parameter(request_staff_ids, key: 'request.staffIds'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetEnrollmentsResponse.method(:from_hash)))
        .execute
    end

    # Book a client into an enrollment.
    # @param [String] version Required parameter: version of the api.
    # @param [AddClientToEnrollmentRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [ClassSchedule] response from the API call
    def add_client_to_enrollment(version,
                                 request,
                                 site_id,
                                 authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/enrollment/addclienttoenrollment',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(ClassSchedule.method(:from_hash)))
        .execute
    end

    # This endpoint adds a enrollment schedule. You can require clients to sign
    # up for the entire enrollment schedule or allow them to pick specific
    # sessions using the AllowOpenEnrollment parameter.
    # @param [String] version Required parameter: version of the api.
    # @param [AddClassEnrollmentScheduleRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [WrittenClassSchedulesInfo] response from the API call
    def add_enrollment_schedule(version,
                                request,
                                site_id,
                                authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/enrollment/addenrollmentschedule',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(WrittenClassSchedulesInfo.method(:from_hash)))
        .execute
    end

    # This endpoint update a enrollment schedule.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClassEnrollmentScheduleRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [WrittenClassSchedulesInfo] response from the API call
    def update_enrollment_schedule(version,
                                   request,
                                   site_id,
                                   authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/enrollment/updateenrollmentschedule',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(WrittenClassSchedulesInfo.method(:from_hash)))
        .execute
    end
  end
end
