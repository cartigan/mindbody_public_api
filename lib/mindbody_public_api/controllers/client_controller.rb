# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # ClientController
  class ClientController < BaseController
    # Please note that client memberships with location restrictions can only be
    # used to pay for scheduled services at the site to which they belong.
    # Memberships with location restrictions can not be used to pay for
    # scheduled services at other sites within an organization.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the client
    # for whom memberships are returned.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: Used to retrieve a client’s memberships from multiple sites
    # within an organization when the client is associated with more than ten
    # sites. To change which ten sites are searched, change this offset value. A
    # value of 0 means that no sites are skipped and the first ten sites are
    # returned. You can use the `CrossRegionalClientAssociations` value from
    # `GET CrossRegionalClientAssociations` to determine how many sites the
    # client is associated with. Note that you must always have
    # `CrossRegionalLookup` set to `true` to use this parameter.<br />  Default:
    # **0**    For example, if a client is associated with 25 sites, you need to
    # call GET `ActiveClientMemberships` three times, as follows:  * Use GET
    # `CrossRegionalClientAssociations` to determine how many sites a client is
    # associated with, which tells you how many additional calls you need to
    # make.  * Either omit `ClientAssociatedSitesOffset` or set it to 0 to
    # return the client’s memberships from sites 1-10  * Set
    # `ClientAssociatedSitesOffset` to 10 to return the client’s memberships
    # from sites 11-20  * Set `ClientAssociatedSitesOffset` to 20 to return the
    # client’s memberships from sites 21-25
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: Used to retrieve a client’s memberships from multiple sites
    # within an organization. When included and set to `true`, it searches a
    # maximum of ten sites with which this client is associated. When a client
    # is associated with more than ten sites, use `ClientAssociatedSitesOffset`
    # as many times as needed to search the additional sites with which the
    # client is associated. You can use the `CrossRegionalClientAssociations`
    # value from `GET CrossRegionalClientAssociations` to determine how many
    # sites the client is associated with. Note that a `SiteID` is returned and
    # populated in the `ClientServices` response when `CrossRegionalLookup` is
    # set to `true`.  Default: **false**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: Filters results
    # to memberships that can be used to pay for scheduled services at that
    # location. This parameter can not be passed when `CrossRegionalLookup` is
    # `true`.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetActiveClientMembershipsResponse] response from the API call
    def get_active_client_memberships(version,
                                      request_client_id,
                                      site_id,
                                      authorization: nil,
                                      request_client_associated_sites_offset: nil,
                                      request_cross_regional_lookup: nil,
                                      request_limit: nil,
                                      request_location_id: nil,
                                      request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/activeclientmemberships',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetActiveClientMembershipsResponse.method(:from_hash)))
        .execute
    end

    # The endpoint returns a list of memberships for multiple clients we pass in
    # query parameter. Please note that clients memberships with location
    # restrictions can only be used to pay for scheduled services at the site to
    # which they belong. Memberships with location restrictions can not be used
    # to pay for scheduled services at other sites within an organization.
    # @param [String] version Required parameter: version of the api.
    # @param [Array[String]] request_client_ids Required parameter: The ID of
    # the client for whom memberships are returned. Maximum allowed : 200.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: Used to retrieve a client’s memberships from multiple sites
    # within an organization when the client is associated with more than ten
    # sites. To change which ten sites are searched, change this offset value. A
    # value of 0 means that no sites are skipped and the first ten sites are
    # returned. You can use the `CrossRegionalClientAssociations` value from
    # `GET CrossRegionalClientAssociations` to determine how many sites the
    # client is associated with. Note that you must always have
    # `CrossRegionalLookup` set to `true` to use this parameter.<br />  Default:
    # **0**    For example, if a client is associated with 25 sites, you need to
    # call `GetClientServices` three times, as follows:  * Use `GET
    # CrossRegionalClientAssociations` to determine how many sites a client is
    # associated with, which tells you how many additional calls you need to
    # make.  * Either omit `ClientAssociatedSitesOffset` or set it to 0 to
    # return the client’s services (pricing options) from sites 1-10.  * Set
    # `ClientAssociatedSitesOffset` to 10 to return the client pricing options
    # from sites 11-20  * Set `ClientAssociatedSitesOffset` to 20 to return the
    # client pricing options from sites 21-25
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: Used to retrieve a client’s memberships from multiple sites
    # within an organization. When included and set to `true`, it searches a
    # maximum of ten sites with which this client is associated. When a client
    # is associated with more than ten sites, use `ClientAssociatedSitesOffset`
    # as many times as needed to search the additional sites with which the
    # client is associated. You can use the `CrossRegionalClientAssociations`
    # value from `GET CrossRegionalClientAssociations` to determine how many
    # sites the client is associated with. Note that a `SiteID` is returned and
    # populated in the `ClientServices` response when `CrossRegionalLookup` is
    # set to `true`.  Default: **false**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: Filters results
    # to memberships that can be used to pay for scheduled services at that
    # location. This parameter can not be passed when `CrossRegionalLookup` is
    # `true`.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetActiveClientsMembershipsResponse] response from the API call
    def get_active_clients_memberships(version,
                                       request_client_ids,
                                       site_id,
                                       authorization: nil,
                                       request_client_associated_sites_offset: nil,
                                       request_cross_regional_lookup: nil,
                                       request_limit: nil,
                                       request_location_id: nil,
                                       request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/activeclientsmemberships',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_ids, key: 'request.clientIds'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetActiveClientsMembershipsResponse.method(:from_hash)))
        .execute
    end

    # Get account balance information for one or more client(s).
    # @param [String] version Required parameter: version of the api.
    # @param [Array[String]] request_client_ids Required parameter: The list of
    # clients IDs for which you want account balances.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_balance_date Optional parameter: The date you
    # want a balance relative to.   Default: **the current date**
    # @param [Integer] request_class_id Optional parameter: The class ID of the
    # event for which you want a balance.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetClientAccountBalancesResponse] response from the API call
    def get_client_account_balances(version,
                                    request_client_ids,
                                    site_id,
                                    authorization: nil,
                                    request_balance_date: nil,
                                    request_class_id: nil,
                                    request_limit: nil,
                                    request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientaccountbalances',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_ids, key: 'request.clientIds'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_balance_date, key: 'request.balanceDate'))
                   .query_param(new_parameter(request_class_id, key: 'request.classId'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientAccountBalancesResponse.method(:from_hash)))
        .execute
    end

    # This endpoint returns complete client information along with list of
    # purchased services, contract details, membership details and arrival
    # programs for a specific client.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: Filters results to
    # client with these ID.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [String] consumer_identity_token Optional parameter: A consumers
    # authorization token to replace the need of clientId in the request.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: Used to retrieve a client’s pricing options from multiple sites
    # within an organization when the client is associated with more than ten
    # sites. To change which ten sites are searched, change this offset value. A
    # value of 0 means that no sites are skipped and the first ten sites are
    # returned. You can use the `CrossRegionalClientAssociations` value from
    # `GET CrossRegionalClientAssociations` to determine how many sites the
    # client is associated with. Note that you must always have
    # `CrossRegionalLookup` set to `true` to use this parameter.<br />  Default:
    # **0**    For example, if a client is associated with 25 sites, you need to
    # call `GetClientServices` three times, as follows:  * Use `GET
    # CrossRegionalClientAssociations` to determine how many sites a client is
    # associated with, which tells you how many additional calls you need to
    # make.  * Either omit `ClientAssociatedSitesOffset` or set it to 0 to
    # return the client’s services (pricing options) from sites 1-10.  * Set
    # `ClientAssociatedSitesOffset` to 10 to return the client pricing options
    # from sites 11-20  * Set `ClientAssociatedSitesOffset` to 20 to return the
    # client pricing options from sites 21-25
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: Used to retrieve a clients pricing options from multiple sites
    # within an organization.When included and set to `true`,  it searches a
    # maximum of ten sites with which this client is associated.When a client is
    # associated with more than ten sites, use `ClientAssociatedSitesOffset` as
    # many times as needed to search the additional sites with which the client
    # is associated.  You can use the `CrossRegionalClientAssociations` value
    # from `GET CrossRegionalClientAssociations` to determine how many sites the
    # client is associated with.   Note that a `SiteID` is returned and
    # populated in the `ClientServices` response when `CrossRegionalLookup` is
    # set to `true`.   Default: **false**
    # @param [DateTime] request_end_date Optional parameter: Filters results to
    # pricing options that are purchased on or before this date.   Default:
    # **today’s date**.
    # @param [TrueClass | FalseClass] request_exclude_inactive_sites Optional
    # parameter: Used to exclude inactive and deleted sites from the results
    # @param [Array[String]] request_required_client_data Optional parameter:
    # Used to retrieve list of purchased services, contract details, membership
    # details and arrival programs for a specific client.   Default
    # `ClientServices`, `ClientContracts`, `ClientMemberships` and
    # `ClientArrivals` will be returned when `RequiredClientDatais` not set.
    # When `RequiredClientData` is set to `Contracts` then only
    # `ClientContracts` will be returned in the response.   When
    # `RequiredClientData` is set to Services then only `ClientServices` will be
    # returned in the response.  When `RequiredClientData` is set to
    # `Memberships` then only `ClientMemberships` will be returned in the
    # response.   When `RequiredClientData` is set to `ArrivalPrograms` then
    # only `ClientArrivals` will be returned in the response.
    # @param [TrueClass | FalseClass] request_show_active_only Optional
    # parameter: (optional) A filter on showing active services only. Set this
    # field to 'true' when trying to determine if a client has a   service can
    # pay for a class or appointment.
    # @param [DateTime] request_start_date Optional parameter: Filters results
    # to pricing options that are purchased on or after this date.   Default:
    # **today’s date**.
    # @param [TrueClass | FalseClass] request_use_activate_date Optional
    # parameter: (optional) When this flag is set to true the date filtering
    # will use activate date to filter the pricing options  When this flag is
    # set to false the date filtering will use purchase date to filter the
    # pricing options
    # @return [GetClientCompleteInfoResponse] response from the API call
    def get_client_complete_info(version,
                                 request_client_id,
                                 site_id,
                                 authorization: nil,
                                 consumer_identity_token: nil,
                                 request_client_associated_sites_offset: nil,
                                 request_cross_regional_lookup: nil,
                                 request_end_date: nil,
                                 request_exclude_inactive_sites: nil,
                                 request_required_client_data: nil,
                                 request_show_active_only: nil,
                                 request_start_date: nil,
                                 request_use_activate_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientcompleteinfo',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter(consumer_identity_token, key: 'consumer-identity-token'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_exclude_inactive_sites, key: 'request.excludeInactiveSites'))
                   .query_param(new_parameter(request_required_client_data, key: 'request.requiredClientData'))
                   .query_param(new_parameter(request_show_active_only, key: 'request.showActiveOnly'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .query_param(new_parameter(request_use_activate_date, key: 'request.useActivateDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientCompleteInfoResponse.method(:from_hash)))
        .execute
    end

    # Get contracts that a client has purchased.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the client
    # (RssId).
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: Determines how many sites are skipped over when retrieving a
    # client’s cross regional contracts. Used when a client ID is linked to more
    # than ten sites in an organization. Only a maximum of ten site databases
    # are queried when this call is made and `CrossRegionalLookup` is set to
    # `true`. To change which sites are queried, change this offset value.
    # Default: **0**
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: When `true`, indicates that the requesting client’s cross
    # regional contracts are returned, if any.<br />  When `false`, indicates
    # that cross regional contracts are not returned.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetClientContractsResponse] response from the API call
    def get_client_contracts(version,
                             request_client_id,
                             site_id,
                             authorization: nil,
                             request_client_associated_sites_offset: nil,
                             request_cross_regional_lookup: nil,
                             request_limit: nil,
                             request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientcontracts',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientContractsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint returns direct debit info stored on a client's account. This
    # endpoint requires staff user credentials.
    # 
    # A null response from this endpoint indicates that the client has no usable
    # direct debit information on their account.Use the POST
    # AddClientDirectDebitInfo endpoint to add direct debit information to a
    # client’s account.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [String] client_id Optional parameter: The ID of the client.
    # @return [DirectDebitInfo] response from the API call
    def get_direct_debit_info(version,
                              site_id,
                              authorization: nil,
                              client_id: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientdirectdebitinfo',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(client_id, key: 'clientId'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(DirectDebitInfo.method(:from_hash)))
        .execute
    end

    # This endpoint deletes direct debit info from a client’s account. This
    # endpoint requires staff user credentials.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [String] client_id Optional parameter: The ID of the client.
    # @return [Object] response from the API call
    def delete_direct_debit_info(version,
                                 site_id,
                                 authorization: nil,
                                 client_id: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/public/v{version}/client/clientdirectdebitinfo',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(client_id, key: 'clientId'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # This endpoint gets client records that would be considered duplicates
    # based on case-insensitive matching of the client’s first name, last name,
    # and email. For there to be results, all three parameters must match a
    # client record. This endpoint requires staff user credentials.
    # 
    # An empty `ClientDuplicates` object in the response from this endpoint
    # indicates that there were no client records found that match the first
    # name, last name, and email fields passed in.
    # 
    # If one client record is returned, it is not a duplicate itself, but no
    # other client record can be created or updated that would match this
    # client’s first name, last name, and email combination.
    # 
    # If more than one client record is returned, these clients are duplicates
    # of each other.We recommend discussing with the business how they would
    # like to resolve duplicate records in the event the response contains more
    # than one client record.Businesses can use the Merge Duplicate Clients tool
    # in the Core Business Mode software to resolve the duplicate client
    # records.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [String] request_email Optional parameter: The client email to
    # match on when searching for duplicates.
    # @param [String] request_first_name Optional parameter: The client first
    # name to match on when searching for duplicates.
    # @param [String] request_last_name Optional parameter: The client last name
    # to match on when searching for duplicates.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetClientDuplicatesResponse] response from the API call
    def get_client_duplicates(version,
                              site_id,
                              authorization: nil,
                              request_email: nil,
                              request_first_name: nil,
                              request_last_name: nil,
                              request_limit: nil,
                              request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientduplicates',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_email, key: 'request.email'))
                   .query_param(new_parameter(request_first_name, key: 'request.firstName'))
                   .query_param(new_parameter(request_last_name, key: 'request.lastName'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientDuplicatesResponse.method(:from_hash)))
        .execute
    end

    # ***QueryParams***: Enables to retrieve cross regional formula notes for a
    # client, or for a specific appointment. The two parameters are optional,
    # however at least one must be provided. This endpoint supports pagination.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_appointment_id Optional parameter: The
    # appointment ID of an appointment in the studio specified in the header of
    # the request.
    # @param [String] request_client_id Optional parameter: The client ID of the
    # client whose formula notes are being requested.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetClientFormulaNotesResponse] response from the API call
    def get_client_formula_notes(version,
                                 site_id,
                                 authorization: nil,
                                 request_appointment_id: nil,
                                 request_client_id: nil,
                                 request_limit: nil,
                                 request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientformulanotes',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_appointment_id, key: 'request.appointmentId'))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientFormulaNotesResponse.method(:from_hash)))
        .execute
    end

    # Client indexes are used to analyze client demographics. A business owner
    # can set up different categories with sets of values which they can assign
    # to each client. Client indexes are used in client searches, for tagging
    # clients so that the owner can send mass emails to similar groups, and for
    # many reports.
    # For more information, see Client Indexes and [Client Index Values (video
    # tutorial)](https://support.mindbodyonline.com/s/article/203261653-Client-i
    # ndexes-and-client-index-values-video-tutorial?language=en_USclient).
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [TrueClass | FalseClass] request_required_only Optional parameter:
    # When `true`, filters the results to only indexes that are required on
    # creation.<br />  When `false` or omitted, returns all of the client
    # indexes.
    # @return [GetClientIndexesResponse] response from the API call
    def get_client_indexes(version,
                           site_id,
                           authorization: nil,
                           request_required_only: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientindexes',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_required_only, key: 'request.requiredOnly'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientIndexesResponse.method(:from_hash)))
        .execute
    end

    # Gets a list of purchases made by a specific client.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the client
    # you are querying for purchases.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date Optional parameter: Filters results to
    # purchases made before this timestamp.<br />  Default: **end of today**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Integer] request_sale_id Optional parameter: Filters results to
    # the single record associated with this ID.
    # @param [DateTime] request_start_date Optional parameter: Filters results
    # to purchases made on or after this timestamp.<br />  Default: **now**
    # @return [GetClientPurchasesResponse] response from the API call
    def get_client_purchases(version,
                             request_client_id,
                             site_id,
                             authorization: nil,
                             request_end_date: nil,
                             request_limit: nil,
                             request_offset: nil,
                             request_sale_id: nil,
                             request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientpurchases',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_sale_id, key: 'request.saleId'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientPurchasesResponse.method(:from_hash)))
        .execute
    end

    # Gets a list of referral types. Referral types are options that new clients
    # can choose to identify how they learned about the business. Referral types
    # are typically used for the sign-up process.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [TrueClass | FalseClass] request_include_inactive Optional
    # parameter: When `true`, filters the results to include subtypes and
    # inactive referral types.<br />  When `false`, includes no subtypes and
    # only active types.  Default:**false**
    # @return [GetClientReferralTypesResponse] response from the API call
    def get_client_referral_types(version,
                                  site_id,
                                  authorization: nil,
                                  request_include_inactive: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientreferraltypes',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_include_inactive, key: 'request.includeInactive'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientReferralTypesResponse.method(:from_hash)))
        .execute
    end

    # Gets the client rewards.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the
    # client.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date Optional parameter: The end date of
    # transaction.  Default: **StartDate**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [DateTime] request_start_date Optional parameter: The start date of
    # transaction.  Default: **today**
    # @return [GetClientRewardsResponse] response from the API call
    def get_client_rewards(version,
                           request_client_id,
                           site_id,
                           authorization: nil,
                           request_end_date: nil,
                           request_limit: nil,
                           request_offset: nil,
                           request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientrewards',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientRewardsResponse.method(:from_hash)))
        .execute
    end

    # Earns or redeems rewards points for a given client, based on site
    # settings. Cross regional rewards are not supported at this time.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClientRewardsRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [GetClientRewardsResponse] response from the API call
    def update_client_rewards(version,
                              request,
                              site_id,
                              authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/clientrewards',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientRewardsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint requires staff user credentials. This endpoint supports
    # pagination. See Pagination for a description of the Pagination
    # information.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Array[String]] request_client_i_ds Optional parameter: The
    # requested client IDs.  Default: **all IDs** that the authenticated user’s
    # access level allows.<br />  Note: You can fetch information for maximum 20
    # clients at once.
    # @param [TrueClass | FalseClass] request_include_inactive Optional
    # parameter: When `true`, indicates the results to include active and
    # inactive clients.<br />  When `false`, indicates that only those clients
    # who are marked as active should be returned.  Default: **false**
    # @param [TrueClass | FalseClass] request_is_prospect Optional parameter:
    # When `true`, filters the results to include only those clients marked as
    # prospects for the business.<br />  When `false`, indicates that only those
    # clients who are not marked prospects should be returned.
    # @param [DateTime] request_last_modified_date Optional parameter: Filters
    # the results to include only the clients that have been modified on or
    # after this date.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [String] request_search_text Optional parameter: Text to use in the
    # search. Can include FirstName, LastName, and Email. Note that user
    # credentials must be provided.
    # @param [Array[Integer]] request_unique_ids Optional parameter: Filters
    # results to clients with these `UniqueIDs`. This parameter cannot be used
    # with `ClientIDs` or `SearchText`.  Default: **all UniqueIDs** that the
    # authenticated user’s access level allows.
    # @return [GetClientsResponse] response from the API call
    def get_clients(version,
                    site_id,
                    authorization: nil,
                    request_client_i_ds: nil,
                    request_include_inactive: nil,
                    request_is_prospect: nil,
                    request_last_modified_date: nil,
                    request_limit: nil,
                    request_offset: nil,
                    request_search_text: nil,
                    request_unique_ids: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clients',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_i_ds, key: 'request.clientIDs'))
                   .query_param(new_parameter(request_include_inactive, key: 'request.includeInactive'))
                   .query_param(new_parameter(request_is_prospect, key: 'request.isProspect'))
                   .query_param(new_parameter(request_last_modified_date, key: 'request.lastModifiedDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_search_text, key: 'request.searchText'))
                   .query_param(new_parameter(request_unique_ids, key: 'request.uniqueIds'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint can be utilized to retrieve scheduled visits which is
    # associated with the requested client.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the
    # requested client.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: The number of sites to skip when returning the site associated
    # with a client.
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: When `true`, indicates that past and scheduled client visits
    # across all sites in the region are returned.  When `false`, indicates that
    # only visits at the current site are returned.
    # @param [DateTime] request_end_date Optional parameter: The date past which
    # class visits are not returned.  Default is today’s date
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [DateTime] request_start_date Optional parameter: The date before
    # which class visits are not returned.  Default is the end date
    # @return [GetClientScheduleResponse] response from the API call
    def get_client_schedule(version,
                            request_client_id,
                            site_id,
                            authorization: nil,
                            request_client_associated_sites_offset: nil,
                            request_cross_regional_lookup: nil,
                            request_end_date: nil,
                            request_limit: nil,
                            request_offset: nil,
                            request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientschedule',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientScheduleResponse.method(:from_hash)))
        .execute
    end

    # Get pricing options that a client has purchased.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the client
    # to query. The results are a list of pricing options that the client has
    # purchased. Note that “service” and “pricing option” are synonymous in this
    # section of the documentation.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_class_id Optional parameter: Filters results to
    # only those pricing options that can be used to pay for this class.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: Used to retrieve a client’s pricing options from multiple sites
    # within an organization when the client is associated with more than ten
    # sites. To change which ten sites are searched, change this offset value. A
    # value of 0 means that no sites are skipped and the first ten sites are
    # returned. You can use the `CrossRegionalClientAssociations` value from
    # `GET CrossRegionalClientAssociations` to determine how many sites the
    # client is associated with. Note that you must always have
    # `CrossRegionalLookup` set to `true` to use this parameter.<br />  Default:
    # **0**    For example, if a client is associated with 25 sites, you need to
    # call `GetClientServices` three times, as follows:  * Use `GET
    # CrossRegionalClientAssociations` to determine how many sites a client is
    # associated with, which tells you how many additional calls you need to
    # make.  * Either omit `ClientAssociatedSitesOffset` or set it to 0 to
    # return the client’s services (pricing options) from sites 1-10.  * Set
    # `ClientAssociatedSitesOffset` to 10 to return the client pricing options
    # from sites 11-20  * Set `ClientAssociatedSitesOffset` to 20 to return the
    # client pricing options from sites 21-25
    # @param [Array[String]] request_client_ids Optional parameter: The IDs of
    # the clients to query. The results are a list of pricing options that the
    # clients have purchased.  ClientId parameter takes priority over ClientIds
    # due to backward compatibility.  So if you want to use ClientIds, then
    # ClientId needs to be empty.  Either of ClientId or ClientIds need to be
    # specified
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: Used to retrieve a client’s pricing options from multiple sites
    # within an organization. When included and set to `true`, it searches a
    # maximum of ten sites with which this client is associated. When a client
    # is associated with more than ten sites, use `ClientAssociatedSitesOffset`
    # as many times as needed to search the additional sites with which the
    # client is associated. You can use the `CrossRegionalClientAssociations`
    # value from `GET CrossRegionalClientAssociations` to determine how many
    # sites the client is associated with. Note that a `SiteID` is returned and
    # populated in the `ClientServices` response when `CrossRegionalLookup` is
    # set to `true`.  Default: **false**
    # @param [DateTime] request_end_date Optional parameter: Filters results to
    # pricing options that are purchased on or before this date.   Default:
    # **today’s date**
    # @param [TrueClass | FalseClass] request_ignore_cross_regional_site_limit
    # Optional parameter: Used to specify if the number of cross regional sites
    # used to search for client’s pricing options should be ignored.   Default:
    # **false**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Array[Integer]] request_location_ids Optional parameter: Filters
    # results to pricing options that can be used at the listed location IDs.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_program_ids Optional parameter: Filters
    # results to pricing options that belong to one of the given program IDs.
    # @param [Integer] request_session_type_id Optional parameter: Filters
    # results to pricing options that will pay for the given session type ID.
    # Use this to find pricing options that will pay for a specific appointment
    # type.
    # @param [TrueClass | FalseClass] request_show_active_only Optional
    # parameter: When `true`, includes active services only.  Default:
    # **false**
    # @param [DateTime] request_start_date Optional parameter: Filters results
    # to pricing options that are purchased on or after this date.  Default:
    # **today’s date**
    # @param [TrueClass | FalseClass] request_use_activate_date Optional
    # parameter: When this flag is set to true the date filtering will use
    # activate date to filter the pricing options  When this flag is set to
    # false the date filtering will use purchase date to filter the pricing
    # options [ Existing logic ]
    # @param [Integer] request_visit_count Optional parameter: A filter on the
    # minimum number of visits a service can pay for.
    # @return [GetClientServicesResponse] response from the API call
    def get_client_services(version,
                            request_client_id,
                            site_id,
                            authorization: nil,
                            request_class_id: nil,
                            request_client_associated_sites_offset: nil,
                            request_client_ids: nil,
                            request_cross_regional_lookup: nil,
                            request_end_date: nil,
                            request_ignore_cross_regional_site_limit: nil,
                            request_limit: nil,
                            request_location_ids: nil,
                            request_offset: nil,
                            request_program_ids: nil,
                            request_session_type_id: nil,
                            request_show_active_only: nil,
                            request_start_date: nil,
                            request_use_activate_date: nil,
                            request_visit_count: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientservices',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_class_id, key: 'request.classId'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_client_ids, key: 'request.clientIds'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_ignore_cross_regional_site_limit, key: 'request.ignoreCrossRegionalSiteLimit'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_ids, key: 'request.locationIds'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_program_ids, key: 'request.programIds'))
                   .query_param(new_parameter(request_session_type_id, key: 'request.sessionTypeId'))
                   .query_param(new_parameter(request_show_active_only, key: 'request.showActiveOnly'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .query_param(new_parameter(request_use_activate_date, key: 'request.useActivateDate'))
                   .query_param(new_parameter(request_visit_count, key: 'request.visitCount'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientServicesResponse.method(:from_hash)))
        .execute
    end

    # Gets the Client Visits for a specific client.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the
    # requested client.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_client_associated_sites_offset Optional
    # parameter: The number of sites to skip when returning the site associated
    # with a client.
    # @param [TrueClass | FalseClass] request_cross_regional_lookup Optional
    # parameter: When `true`, indicates that past and scheduled client visits
    # across all sites in the region are returned.<br />  When `false`,
    # indicates that only visits at the current site are returned.
    # @param [DateTime] request_end_date Optional parameter: The date past which
    # class visits are not returned.  Default: **today’s date**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [DateTime] request_start_date Optional parameter: The date before
    # which class visits are not returned.  Default: **the end date**
    # @param [TrueClass | FalseClass] request_unpaids_only Optional parameter:
    # When `true`, indicates that only visits that have not been paid for are
    # returned.<br />  When `false`, indicates that all visits are returned,
    # regardless of whether they have been paid for.<br />  Default: **false**
    # @return [GetClientVisitsResponse] response from the API call
    def get_client_visits(version,
                          request_client_id,
                          site_id,
                          authorization: nil,
                          request_client_associated_sites_offset: nil,
                          request_cross_regional_lookup: nil,
                          request_end_date: nil,
                          request_limit: nil,
                          request_offset: nil,
                          request_start_date: nil,
                          request_unpaids_only: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/clientvisits',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_associated_sites_offset, key: 'request.clientAssociatedSitesOffset'))
                   .query_param(new_parameter(request_cross_regional_lookup, key: 'request.crossRegionalLookup'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .query_param(new_parameter(request_unpaids_only, key: 'request.unpaidsOnly'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClientVisitsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint contains a variety of filters that can return not just all
    # contact logs, but also system-generated contact logs, contact logs
    # assigned to specific staff members, and contact logs of specific types or
    # subtypes.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The ID of the client
    # whose contact logs are being requested.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date Optional parameter: Filters the results
    # to contact logs created before this date.<br />  Default: **the start
    # date**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [TrueClass | FalseClass] request_show_system_generated Optional
    # parameter: When `true`, system-generated contact logs are returned in the
    # results.<br />  Default: **false**
    # @param [Array[Integer]] request_staff_ids Optional parameter: Filters the
    # results to return contact logs assigned to one or more staff IDs.
    # @param [DateTime] request_start_date Optional parameter: Filters the
    # results to contact logs created on or after this date.<br />  Default:
    # **the current date**
    # @param [Array[Integer]] request_subtype_ids Optional parameter: Filters
    # the results to contact logs assigned one or more of these subtype IDs.
    # @param [Array[Integer]] request_type_ids Optional parameter: Filters the
    # results to contact logs assigned one or more of these type IDs.
    # @return [GetContactLogsResponse] response from the API call
    def get_contact_logs(version,
                         request_client_id,
                         site_id,
                         authorization: nil,
                         request_end_date: nil,
                         request_limit: nil,
                         request_offset: nil,
                         request_show_system_generated: nil,
                         request_staff_ids: nil,
                         request_start_date: nil,
                         request_subtype_ids: nil,
                         request_type_ids: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/contactlogs',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_show_system_generated, key: 'request.showSystemGenerated'))
                   .query_param(new_parameter(request_staff_ids, key: 'request.staffIds'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .query_param(new_parameter(request_subtype_ids, key: 'request.subtypeIds'))
                   .query_param(new_parameter(request_type_ids, key: 'request.typeIds'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetContactLogsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint contains a variety of filters that can return not just all
    # contact logs, but also system-generated contact logs, contact logs
    # assigned to specific staff members, and contact logs of specific types or
    # subtypes.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_contact_log_type_id Optional parameter: The
    # requested ContactLogType ID.  Default: **all** IDs that the authenticated
    # user’s access level allows.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetContactLogTypesResponse] response from the API call
    def get_contact_log_types(version,
                              site_id,
                              authorization: nil,
                              request_contact_log_type_id: nil,
                              request_limit: nil,
                              request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/contactlogtypes',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_contact_log_type_id, key: 'request.contactLogTypeId'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetContactLogTypesResponse.method(:from_hash)))
        .execute
    end

    # Returns a list of sites that a particular client ID (also referred to as
    # an RSSID) or a client email address is associated with in a cross-regional
    # organization. Either the `ClientID` or `Email` parameter is required. If
    # both are provided, the `ClientID` is used.
    # Use this endpoint to retrieve information for other Public API endpoints,
    # about the same client at multiple sites within an organization. To use
    # this endpoint, your developer account must have been granted permission to
    # the site’s entire organization.
    # Note that this endpoint does not work on the Developer Sandbox site, as it
    # is not set up for cross-regional use cases.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [String] request_client_id Optional parameter: Looks up the cross
    # regional associations by the client’s ID. Either `ClientId` or `Email`
    # must be provided. If both are provided, the `ClientId` is used by
    # default.
    # @param [String] request_email Optional parameter: Looks up the cross
    # regional associations by the client’s email address. Either `ClientId` or
    # `Email` must be provided. If both are provided, the `ClientId` is used by
    # default.
    # @param [String] request_first_name Optional parameter: First name (used
    # for email queries)
    # @param [String] request_last_name Optional parameter: Last name (used for
    # email queries)
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [TrueClass | FalseClass] request_v2 Optional parameter: Use newer
    # method
    # @return [GetCrossRegionalClientAssociationsResponse] response from the API call
    def get_cross_regional_client_associations(version,
                                               site_id,
                                               authorization: nil,
                                               request_client_id: nil,
                                               request_email: nil,
                                               request_first_name: nil,
                                               request_last_name: nil,
                                               request_limit: nil,
                                               request_offset: nil,
                                               request_v2: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/crossregionalclientassociations',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .query_param(new_parameter(request_email, key: 'request.email'))
                   .query_param(new_parameter(request_first_name, key: 'request.firstName'))
                   .query_param(new_parameter(request_last_name, key: 'request.lastName'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_v2, key: 'request.v2'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetCrossRegionalClientAssociationsResponse.method(:from_hash)))
        .execute
    end

    # Get a site's configured custom client fields.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [GetCustomClientFieldsResponse] response from the API call
    def get_custom_client_fields(version,
                                 site_id,
                                 authorization: nil,
                                 request_limit: nil,
                                 request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/customclientfields',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetCustomClientFieldsResponse.method(:from_hash)))
        .execute
    end

    # Gets the list of fields that a new client has to fill out in business
    # mode, specifically for the sign-up process. `AddClient` and `UpdateClient`
    # validate against these fields.
    # This endpoint has no query parameters.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [GetRequiredClientFieldsResponse] response from the API call
    def get_required_client_fields(version,
                                   site_id,
                                   authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/client/requiredclientfields',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetRequiredClientFieldsResponse.method(:from_hash)))
        .execute
    end

    # Marks a client as arrived for a specified location. A staff user token
    # must be included with staff assigned the LaunchSignInScreen permission.
    # 
    # When used on a site that is part of a region, the following additional
    # logic will apply:
    # 
    # * When a client exists within the region but not at the studio where the
    # arrival is being logged, a local client record will be automatically
    # created.
    # * If the local client does not have an applicable local membership or
    # pricing option, a membership or pricing option will be automatically used
    # if it exists elsewhere within the region.
    # @param [String] version Required parameter: version of the api.
    # @param [AddArrivalRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [AddArrivalResponse] response from the API call
    def add_arrival(version,
                    request,
                    site_id,
                    authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/addarrival',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AddArrivalResponse.method(:from_hash)))
        .execute
    end

    # Starting the week of May 11th, 2020 all versions of the Public API will no
    # longer allow duplicate clients to be created. This applies to both adding
    # a client and updating a client record. A duplicate client is created when
    # two profiles have the same first name, last name and email.<br />
    # Creates a new client record at the specified business.Passing a User Token
    # as Authorization will create a client and respect Business Mode required
    # fields.Omitting the token will create a client and respect Consumer Mode
    # required fi elds. To make sure you are collecting all required pieces of
    # information, first run GetRequired ClientFields.<br />
    # If you have purchased an Ultimate tier then this endpoint will
    # automatically start showing new opportunity on Sales Pipeline.
    # @param [String] version Required parameter: version of the api.
    # @param [AddClientRequest] request Required parameter: The `FirstName` and
    # `LastName` parameters are always required in this request.
    # All other parameters are optional, but note that any of the optional
    # parameters could be required by a particular business,
    # depending on how the business has configured the site settings. If
    # `GetRequiredClientFields` returns `EmergContact` in the list of required
    # fields,              then all emergency contact parameters are required,
    # which includes `EmergencyContactInfoEmail`, `EmergencyContactInfoName`,
    # `EmergencyContactInfoPhone`, and `EmergencyContactInfoRelationship`.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [AddClientResponse] response from the API call
    def add_client(version,
                   request,
                   site_id,
                   authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/addclient',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AddClientResponse.method(:from_hash)))
        .execute
    end

    # This endpoint adds direct debit info to a client’s account. This endpoint
    # requires staff user credentials.
    # @param [String] version Required parameter: version of the api.
    # @param [AddClientDirectDebitInfoRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [AddClientDirectDebitInfoResponse] response from the API call
    def add_client_direct_debit_info(version,
                                     request,
                                     site_id,
                                     authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/addclientdirectdebitinfo',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AddClientDirectDebitInfoResponse.method(:from_hash)))
        .execute
    end

    # This endpoint adds a formula note for a specified client or specified
    # client appointment. A staff user token must be included with staff
    # assigned permission to view client profile or have both
    # ViewAppointmentDetails and ModifyAppointment permissions.
    # @param [String] version Required parameter: version of the api.
    # @param [AddFormulaNoteRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [FormulaNoteResponse] response from the API call
    def add_formula_note(version,
                         request,
                         site_id,
                         authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/addclientformulanote',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(FormulaNoteResponse.method(:from_hash)))
        .execute
    end

    # Add a contact log to a client's account.
    # @param [String] version Required parameter: version of the api.
    # @param [AddContactLogRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [ContactLog] response from the API call
    def add_contact_log(version,
                        request,
                        site_id,
                        authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/addcontactlog',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(ContactLog.method(:from_hash)))
        .execute
    end

    # This endpoint helps to merge clients.
    # @param [String] version Required parameter: version of the api.
    # @param [MergeClientsRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [Object] response from the API call
    def merge_client(version,
                     request,
                     site_id,
                     authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/mergeclients',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # This endpoint requires staff user credentials.
    # @param [String] version Required parameter: version of the api.
    # @param [SendAutoEmailRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [Object] response from the API call
    def send_auto_email(version,
                        request,
                        site_id,
                        authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/sendautoemail',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # Send a password reset email to a client.
    # @param [String] version Required parameter: version of the api.
    # @param [SendPasswordResetEmailRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [Object] response from the API call
    def send_password_reset_email(version,
                                  request,
                                  site_id,
                                  authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/sendpasswordresetemail',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # Suspend client contract
    # @param [String] version Required parameter: version of the api.
    # @param [SuspendContractRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [SuspendContractResponse] response from the API call
    def suspend_contract(version,
                         request,
                         site_id,
                         authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/suspendcontract',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(SuspendContractResponse.method(:from_hash)))
        .execute
    end

    # This endpoint terminates a client contract. This endpoint requires staff
    # user credentials with TerminateClientContract permission.
    # @param [String] version Required parameter: version of the api.
    # @param [TerminateContractRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [TerminateContractResponse] response from the API call
    def terminate_contract(version,
                           request,
                           site_id,
                           authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/terminatecontract',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(TerminateContractResponse.method(:from_hash)))
        .execute
    end

    # Starting the week of May 11th, 2020 all versions of the Public API will no
    # longer allow duplicate clients to be created. This applies to both adding
    # a client and updating a client record. A duplicate client is created when
    # two profiles have the same first name, last name and email.<br />
    # Updates an existing client for a specific subscriber.Passing a User Token
    # as Authorization respects Business Mode required fields.Omitting the token
    # respects Consumer Mode required fields.To make sure you are collecting all
    # required pieces of information, first run GetRequiredClientFields..Use
    # this endpoint as follows:
    # * If you need to update the `ReferredBy` parameter, use this endpoint
    # after calling `GET ClientReferralTypes`.
    # * When updating a client’s home location, use after calling `GET
    # Locations`.
    # * If you are updating a client’s stored credit card, use after calling
    # `GET AcceptedCardTypes` so that you can make sure the card is a type that
    # is accepted at the subscriber.
    # If this endpoint is used on a cross-regional site, passing in a client’s
    # RSSID and email address creates a cross-regional link. This means that the
    # client is created in cross-regional sites where the client does not exist
    # and `GET CrossRegionalClientAssociations` returns all appropriate
    # cross-regional sites. When `CrossRegionalUpdate` is omitted or set to
    # `true`, the client’s updated information is propagated to all of the
    # region’s sites. If `CrossRegionalUpdate` is set to `false`, only the local
    # client is updated.
    # Note that the following items cannot be updated for a cross-regional
    # client:
    # * `ClientIndexes`
    # * `ClientRelationships`
    # * `CustomClientFields`
    # * `SalesReps`
    # * `SendAccountEmails`
    # * `SendAccountTexts`
    # * `SendPromotionalEmails`
    # * `SendPromotionalTexts`
    # * `SendScheduleEmails`
    # * `SendScheduleTexts`
    # * `Gender` (for site custom values)
    # Custom client Gender options can only be created with non-cross-regional
    # requests.
    # 
    # If you have purchased an Ultimate tier then this endpoint will
    # automatically start showing a new opportunity on Sales Pipeline.It will
    # create a new opportunity if the current request modify the contact as
    # follows::
    # 
    # * You need to update the `IsProspect` parameter, to `true`.<br />
    # * You need to update the `ProspectStage`.`Description parameter`, to `New
    # Lead`.<br />
    # Updates made to any inactive clients will automatically reactivate the
    # client unless the `Acive` property is explicitly set to `false` in the
    # request body.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClientRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [UpdateClientResponse] response from the API call
    def update_client(version,
                      request,
                      site_id,
                      authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/updateclient',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(UpdateClientResponse.method(:from_hash)))
        .execute
    end

    # This endpoint can be used to update the amount and/or the item of a
    # client’s autopay schedule.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClientContractAutopaysRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [Contract] response from the API call
    def update_client_contract_autopays(version,
                                        request,
                                        site_id,
                                        authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/updateclientcontractautopays',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(Contract.method(:from_hash)))
        .execute
    end

    # Updates the active date and/or expiration date of a client pricing option.
    # This request requires staff user credentials. If the active date is
    # modified, the expiration date is also modified accordingly. If the
    # expiration date is modified, the active date is unchanged.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClientServiceRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [UpdateClientServiceResponse] response from the API call
    def update_client_service(version,
                              request,
                              site_id,
                              authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/updateclientservice',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(UpdateClientServiceResponse.method(:from_hash)))
        .execute
    end

    # Updates the status of the specified visit.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClientVisitRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [UpdateClientVisitResponse] response from the API call
    def update_client_visit(version,
                            request,
                            site_id,
                            authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/updateclientvisit',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(UpdateClientVisitResponse.method(:from_hash)))
        .execute
    end

    # Update a contact log on a client's account.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateContactLogRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [ContactLog] response from the API call
    def update_contact_log(version,
                           request,
                           site_id,
                           authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/updatecontactlog',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(ContactLog.method(:from_hash)))
        .execute
    end

    # Uploads a document file for a specific client. Returns a string
    # representation of the image byte array. The maximum size file that can be
    # uploaded is **4MB**.
    # @param [String] version Required parameter: version of the api.
    # @param [UploadClientDocumentRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [UploadClientDocumentResponse] response from the API call
    def upload_client_document(version,
                               request,
                               site_id,
                               authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/uploadclientdocument',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(UploadClientDocumentResponse.method(:from_hash)))
        .execute
    end

    # Uploads a client’s profile photo. The maximum file size is 4 MB and
    # acceptable file types are:
    # * bmp
    # * jpeg
    # * gif
    # * tiff
    # * png
    # @param [String] version Required parameter: version of the api.
    # @param [UploadClientPhotoRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [UploadClientPhotoResponse] response from the API call
    def upload_client_photo(version,
                            request,
                            site_id,
                            authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/client/uploadclientphoto',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(UploadClientPhotoResponse.method(:from_hash)))
        .execute
    end

    # This endpoint deletes an existing formula note. A staff user token must be
    # included with staff assigned permission to view client profile or have
    # both ViewAppointmentDetails and ModifyAppointment permissions.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The client ID of the
    # client whose formula note needs to be deleted.
    # @param [Integer] request_formula_note_id Required parameter: The formula
    # note ID for the note to be deleted.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @return [void] response from the API call
    def delete_client_formula_note(version,
                                   request_client_id,
                                   request_formula_note_id,
                                   site_id,
                                   authorization: nil,
                                   request_limit: nil,
                                   request_offset: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/public/v{version}/client/clientformulanote',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .query_param(new_parameter(request_formula_note_id, key: 'request.formulaNoteId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .is_response_void(true))
        .execute
    end

    # This endpoint deletes contactlog of client. This endpoint requires staff
    # user credentials.
    # @param [String] version Required parameter: version of the api.
    # @param [String] request_client_id Required parameter: The client ID of the
    # client whose Contact Log is being deleted.
    # @param [Integer] request_contact_log_id Required parameter: The Contact
    # Log ID.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [TrueClass | FalseClass] request_test Optional parameter: When
    # `true`, indicates that this is a test request and no data is inserted into
    # the subscriber’s database.  When `false`, the database is updated.
    # @return [Object] response from the API call
    def delete_contact_log(version,
                           request_client_id,
                           request_contact_log_id,
                           site_id,
                           authorization: nil,
                           request_test: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/public/v{version}/client/deletecontactlog',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .query_param(new_parameter(request_contact_log_id, key: 'request.contactLogId'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_test, key: 'request.test'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end
  end
end
