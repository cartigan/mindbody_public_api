# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # ClassController
  class ClassController < BaseController
    # To find class descriptions associated with **scheduled classes**, pass
    # `StaffId`, `StartClassDateTime`, `EndClassDateTime`, or `LocationId` in
    # the request.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Integer] request_class_description_id Optional parameter: The ID
    # of the requested client.
    # @param [DateTime] request_end_class_date_time Optional parameter: Filters
    # the results to class descriptions for scheduled classes that happen before
    # the given date and time.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: Filters results
    # to classes descriptions for schedule classes as the given location.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_program_ids Optional parameter: A list of
    # requested program IDs.
    # @param [Integer] request_staff_id Optional parameter: Filters results to
    # class descriptions for scheduled classes taught by the given staff
    # member.
    # @param [DateTime] request_start_class_date_time Optional parameter:
    # Filters the results to class descriptions for scheduled classes that
    # happen on or after the given date and time.
    # @return [GetClassDescriptionsResponse] response from the API call
    def get_class_descriptions(version,
                               site_id,
                               authorization: nil,
                               request_class_description_id: nil,
                               request_end_class_date_time: nil,
                               request_limit: nil,
                               request_location_id: nil,
                               request_offset: nil,
                               request_program_ids: nil,
                               request_staff_id: nil,
                               request_start_class_date_time: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/classdescriptions',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_class_description_id, key: 'request.classDescriptionId'))
                   .query_param(new_parameter(request_end_class_date_time, key: 'request.endClassDateTime'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_program_ids, key: 'request.programIds'))
                   .query_param(new_parameter(request_staff_id, key: 'request.staffId'))
                   .query_param(new_parameter(request_start_class_date_time, key: 'request.startClassDateTime'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClassDescriptionsResponse.method(:from_hash)))
        .execute
    end

    # Get scheduled classes.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Array[Integer]] request_class_description_ids Optional parameter:
    # The requested class description IDs.
    # @param [Array[Integer]] request_class_ids Optional parameter: The
    # requested class IDs.
    # @param [Array[Integer]] request_class_schedule_ids Optional parameter: The
    # requested classSchedule Ids.
    # @param [String] request_client_id Optional parameter: The client ID of the
    # client who is viewing this class list. Based on identity, the client may
    # be able to see additional information, such as membership specials.
    # @param [DateTime] request_end_date_time Optional parameter: The requested
    # end date for filtering.  <br />Default: **today’s date**
    # @param [TrueClass | FalseClass] request_hide_canceled_classes Optional
    # parameter: When `true`, canceled classes are removed from the response.<br
    # />  When `false`, canceled classes are included in the response.<br />
    # Default: **false**
    # @param [DateTime] request_last_modified_date Optional parameter: When
    # included in the request, only records modified on or after the
    # `LastModifiedDate` specified are included in the response.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Array[Integer]] request_location_ids Optional parameter: A list of
    # location IDs on which to base the search.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_program_ids Optional parameter: A list of
    # program IDs on which to base the search.
    # @param [TrueClass | FalseClass] request_scheduling_window Optional
    # parameter: When `true`, classes outside scheduling window are removed from
    # the response.<br />  When `false`, classes are included in the response,
    # regardless of the scheduling window.<br />  Default: **false**
    # @param [Array[Integer]] request_semester_ids Optional parameter: A list of
    # semester IDs on which to base the search.
    # @param [Array[Integer]] request_session_type_ids Optional parameter: A
    # list of session type IDs on which to base the search.
    # @param [Array[Integer]] request_staff_ids Optional parameter: The
    # requested IDs of the teaching staff members.
    # @param [DateTime] request_start_date_time Optional parameter: The
    # requested start date for filtering. This also determines what you will see
    # for the ‘BookingWindow’ StartDateTime in the response. For example, if you
    # pass a StartDateTime that is on OR before the BookingWindow ‘Open’ days of
    # the class, you will retrieve the actual ‘StartDateTime’ for the Booking
    # Window. If you pass a StartDateTime that is after the BookingWindow
    # ‘date’, then you will receive results based on that start date.
    # @return [GetClassesResponse] response from the API call
    def get_classes(version,
                    site_id,
                    authorization: nil,
                    request_class_description_ids: nil,
                    request_class_ids: nil,
                    request_class_schedule_ids: nil,
                    request_client_id: nil,
                    request_end_date_time: nil,
                    request_hide_canceled_classes: nil,
                    request_last_modified_date: nil,
                    request_limit: nil,
                    request_location_ids: nil,
                    request_offset: nil,
                    request_program_ids: nil,
                    request_scheduling_window: nil,
                    request_semester_ids: nil,
                    request_session_type_ids: nil,
                    request_staff_ids: nil,
                    request_start_date_time: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/classes',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_class_description_ids, key: 'request.classDescriptionIds'))
                   .query_param(new_parameter(request_class_ids, key: 'request.classIds'))
                   .query_param(new_parameter(request_class_schedule_ids, key: 'request.classScheduleIds'))
                   .query_param(new_parameter(request_client_id, key: 'request.clientId'))
                   .query_param(new_parameter(request_end_date_time, key: 'request.endDateTime'))
                   .query_param(new_parameter(request_hide_canceled_classes, key: 'request.hideCanceledClasses'))
                   .query_param(new_parameter(request_last_modified_date, key: 'request.lastModifiedDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_ids, key: 'request.locationIds'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_program_ids, key: 'request.programIds'))
                   .query_param(new_parameter(request_scheduling_window, key: 'request.schedulingWindow'))
                   .query_param(new_parameter(request_semester_ids, key: 'request.semesterIds'))
                   .query_param(new_parameter(request_session_type_ids, key: 'request.sessionTypeIds'))
                   .query_param(new_parameter(request_staff_ids, key: 'request.staffIds'))
                   .query_param(new_parameter(request_start_date_time, key: 'request.startDateTime'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClassesResponse.method(:from_hash)))
        .execute
    end

    # Get class schedules.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Array[Integer]] request_class_schedule_ids Optional parameter: The
    # class schedule IDs.  <br />Default: **all**
    # @param [DateTime] request_end_date Optional parameter: The end date of the
    # range. Return any active enrollments that occur on or before this day.
    # <br />Default: **StartDate**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Array[Integer]] request_location_ids Optional parameter: The
    # location IDs.   <br />Default: **all**
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_program_ids Optional parameter: The
    # program IDs.   <br />Default: **all**
    # @param [Array[Integer]] request_session_type_ids Optional parameter: The
    # session type IDs.   <br />Default: **all**
    # @param [Array[Integer]] request_staff_ids Optional parameter: The staff
    # IDs.   <br />Default: **all**
    # @param [DateTime] request_start_date Optional parameter: The start date of
    # the range. Return any active enrollments that occur on or after this day.
    # <br />Default: **today’s date**
    # @return [GetClassSchedulesResponse] response from the API call
    def get_class_schedules(version,
                            site_id,
                            authorization: nil,
                            request_class_schedule_ids: nil,
                            request_end_date: nil,
                            request_limit: nil,
                            request_location_ids: nil,
                            request_offset: nil,
                            request_program_ids: nil,
                            request_session_type_ids: nil,
                            request_staff_ids: nil,
                            request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/classschedules',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_class_schedule_ids, key: 'request.classScheduleIds'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_ids, key: 'request.locationIds'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_program_ids, key: 'request.programIds'))
                   .query_param(new_parameter(request_session_type_ids, key: 'request.sessionTypeIds'))
                   .query_param(new_parameter(request_staff_ids, key: 'request.staffIds'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClassSchedulesResponse.method(:from_hash)))
        .execute
    end

    # Returns a list of visits that contain information for a specified class.
    # On success, this request returns the class object in the response with a
    # list of visits.
    # @param [String] version Required parameter: version of the api.
    # @param [Integer] request_class_id Required parameter: The class ID.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_last_modified_date Optional parameter: When
    # included in the request, only records modified on or after the
    # `LastModifiedDate` specified are included in the response.
    # @return [GetClassVisitsResponse] response from the API call
    def get_class_visits(version,
                         request_class_id,
                         site_id,
                         authorization: nil,
                         request_last_modified_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/classvisits',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_class_id, key: 'request.classID'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_last_modified_date, key: 'request.lastModifiedDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetClassVisitsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint will provide all the data related to courses depending on
    # the access level.<br />
    # Note: The Authorization is an optional header.If Authorization header is
    # not passed, the response will be masked else full response will be
    # provided.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Array[Integer]] get_courses_request_course_i_ds Optional
    # parameter: Return only courses that are available for the specified
    # CourseIds.
    # @param [DateTime] get_courses_request_end_date Optional parameter: The end
    # date range. Any active courses that are on or before this day.  <br
    # />(optional) Defaults to StartDate.
    # @param [Integer] get_courses_request_limit Optional parameter: Number of
    # results to include, defaults to 100
    # @param [Array[Integer]] get_courses_request_location_i_ds Optional
    # parameter: Return only courses that are available for the specified
    # LocationIds.
    # @param [Integer] get_courses_request_offset Optional parameter: Page
    # offset, defaults to 0.
    # @param [Array[Integer]] get_courses_request_program_i_ds Optional
    # parameter: Return only courses that are available for the specified
    # ProgramIds.
    # @param [Array[Integer]] get_courses_request_semester_i_ds Optional
    # parameter: Return only courses that are available for the specified
    # SemesterIds.
    # @param [Array[Integer]] get_courses_request_staff_i_ds Optional parameter:
    # Return only courses that are available for the specified StaffIds.
    # @param [DateTime] get_courses_request_start_date Optional parameter: The
    # start date range. Any active courses that are on or after this day.  <br
    # />(optional) Defaults to today.
    # @return [GetCoursesReponse] response from the API call
    def get_courses(version,
                    site_id,
                    authorization: nil,
                    get_courses_request_course_i_ds: nil,
                    get_courses_request_end_date: nil,
                    get_courses_request_limit: nil,
                    get_courses_request_location_i_ds: nil,
                    get_courses_request_offset: nil,
                    get_courses_request_program_i_ds: nil,
                    get_courses_request_semester_i_ds: nil,
                    get_courses_request_staff_i_ds: nil,
                    get_courses_request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/courses',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(get_courses_request_course_i_ds, key: 'getCoursesRequest.courseIDs'))
                   .query_param(new_parameter(get_courses_request_end_date, key: 'getCoursesRequest.endDate'))
                   .query_param(new_parameter(get_courses_request_limit, key: 'getCoursesRequest.limit'))
                   .query_param(new_parameter(get_courses_request_location_i_ds, key: 'getCoursesRequest.locationIDs'))
                   .query_param(new_parameter(get_courses_request_offset, key: 'getCoursesRequest.offset'))
                   .query_param(new_parameter(get_courses_request_program_i_ds, key: 'getCoursesRequest.programIDs'))
                   .query_param(new_parameter(get_courses_request_semester_i_ds, key: 'getCoursesRequest.semesterIDs'))
                   .query_param(new_parameter(get_courses_request_staff_i_ds, key: 'getCoursesRequest.staffIDs'))
                   .query_param(new_parameter(get_courses_request_start_date, key: 'getCoursesRequest.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetCoursesReponse.method(:from_hash)))
        .execute
    end

    # This endpoint retrieves the business class semesters.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [TrueClass | FalseClass] request_active Optional parameter: When
    # true, the response only contains semesters which are activated. When
    # false, only deactivated semesters are returned.  Default: **All
    # semesters**
    # @param [DateTime] request_end_date Optional parameter: The end date for
    # the range. All semesters that are on or before this day.  Default:
    # **StartDate**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_semester_i_ds Optional parameter: The
    # requested semester IDs.
    # @param [DateTime] request_start_date Optional parameter: The start date
    # for the range. All semesters that are on or after this day.  Default:
    # **today’s date**
    # @return [GetSemestersResponse] response from the API call
    def get_semesters(version,
                      site_id,
                      authorization: nil,
                      request_active: nil,
                      request_end_date: nil,
                      request_limit: nil,
                      request_offset: nil,
                      request_semester_i_ds: nil,
                      request_start_date: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/semesters',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_active, key: 'request.active'))
                   .query_param(new_parameter(request_end_date, key: 'request.endDate'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_semester_i_ds, key: 'request.semesterIDs'))
                   .query_param(new_parameter(request_start_date, key: 'request.startDate'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetSemestersResponse.method(:from_hash)))
        .execute
    end

    # Returns a list of waiting list entries for a specified class schedule or
    # class. The request requires staff credentials and either a class schedule
    # ID or class ID.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [Array[Integer]] request_class_ids Optional parameter: The
    # requested class IDs. If a class ID is present, the request automatically
    # disregards any class schedule IDs in the request. <br />  Either
    # `ClassScheduleIds`, `ClientIds`, `WaitlistEntryIds`, or `ClassIds` is
    # required; the others become optional.<br />  Default: **all ClassIds**
    # @param [Array[Integer]] request_class_schedule_ids Optional parameter: The
    # requested class schedule IDs. If a class ID is present, the request
    # automatically disregards any class schedule IDs in the request.<br />
    # Either `ClassScheduleIds`, `ClientIds`, `WaitlistEntryIds`, or `ClassIds`
    # is required; the others become optional.<br />  Default: **all
    # ClassScheduleIds**
    # @param [Array[String]] request_client_ids Optional parameter: The
    # requested client IDs.<br />  Either `ClassScheduleIds`, `ClientIds`,
    # `WaitlistEntryIds`, or `ClassIds` is required; the others become
    # optional.<br />  Default: **all ClientIds**
    # @param [TrueClass | FalseClass] request_hide_past_entries Optional
    # parameter: When `true`, indicates that past waiting list entries are
    # hidden from clients.<br />  When `false`, indicates that past entries are
    # not hidden from clients.<br />  Default: **false**
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Array[Integer]] request_waitlist_entry_ids Optional parameter: The
    # requested waiting list entry IDs.<br />  Either `ClassScheduleIds`,
    # `ClientIds`, `WaitlistEntryIds`, or `ClassIds` is required; the others
    # become optional.<br />  Default: **all WaitlistEntryIds**
    # @return [GetWaitlistEntriesResponse] response from the API call
    def get_waitlist_entries(version,
                             site_id,
                             authorization: nil,
                             request_class_ids: nil,
                             request_class_schedule_ids: nil,
                             request_client_ids: nil,
                             request_hide_past_entries: nil,
                             request_limit: nil,
                             request_offset: nil,
                             request_waitlist_entry_ids: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/class/waitlistentries',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_class_ids, key: 'request.classIds'))
                   .query_param(new_parameter(request_class_schedule_ids, key: 'request.classScheduleIds'))
                   .query_param(new_parameter(request_client_ids, key: 'request.clientIds'))
                   .query_param(new_parameter(request_hide_past_entries, key: 'request.hidePastEntries'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_waitlist_entry_ids, key: 'request.waitlistEntryIds'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetWaitlistEntriesResponse.method(:from_hash)))
        .execute
    end

    # This endpoint adds a class schedule. For a single day schedule, the
    # EndDate parameter can be omitted.
    # @param [String] version Required parameter: version of the api.
    # @param [AddClassEnrollmentScheduleRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [WrittenClassSchedulesInfo] response from the API call
    def add_class_schedule(version,
                           request,
                           site_id,
                           authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/addclassschedule',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(WrittenClassSchedulesInfo.method(:from_hash)))
        .execute
    end

    # This endpoint adds a client to a class or to a class waiting list. To
    # prevent overbooking a class or booking outside the schedule windows set
    # forth by the business, it is necessary to first check the capacity level
    # of the class (‘MaxCapacity’ and 'TotalBooked’) and the 'IsAvailable’
    # parameter by running the GetClasses REQUEST. It is helpful to use this
    # endpoint in the following situations:
    # * Use after calling `GET Clients` and `GET Classes` so that you are sure
    # which client to book in which class.
    # * If adding a client to a class from a waiting list, use this call after
    # you call `GET WaitlistEntries` and determine the ID of the waiting list
    # from which you are moving the client.
    # * If adding a client to a class and using a pricing option that the client
    # has already purchased, use this call after you call `GET ClientServices`
    # to determine the ID of the pricing option that the client wants to use.
    # If you add a client to a class and the client purchases a new pricing
    # option, use `GET Services`, `GET Classes`, and then `POST
    # CheckoutShoppingCart` in place of this call.
    # This endpoint also supports cross-regional class bookings. If you want to
    # perform a cross-regional class booking, set `CrossRegionalBooking` to
    # `true`. This endpoint does not support adding a user to a waiting list
    # using a cross-regional client pricing option(service). Cross-regional
    # booking workflows do not support client service scheduling restrictions.
    # When performing a cross-regional class booking, this endpoint loops
    # through the first ten sites that the client is associated with, looks for
    # client pricing options at each of those sites, and then uses the oldest
    # client pricing option found.It is important to note that this endpoint
    # only loops through a maximum of ten associated client sites. If a
    # `ClientID` is associated with more than ten sites in an organization, this
    # endpoint only loops through the first ten.If you know that a client has a
    # client service at another site, you can specify that site using the
    # `CrossRegionalBookingClientServiceSiteId` query parameter.
    # If you perform a cross-regional booking, two additional fields are
    # included in the `SessionType` object of the response:
    # * `SiteID`, which specifies where the client service is coming from
    # * `CrossRegionalBookingPerformed`, a Boolean field that is set to `true`
    # As a prerequisite to using this endpoint, your `SourceName` must have been
    # granted access to the organization to which the site belongs.
    # @param [String] version Required parameter: version of the api.
    # @param [AddClientToClassRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [AddClientToClassResponse] response from the API call
    def add_client_to_class(version,
                            request,
                            site_id,
                            authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/addclienttoclass',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AddClientToClassResponse.method(:from_hash)))
        .execute
    end

    # This endpoint will cancel a single class from studio.
    # @param [String] version Required parameter: version of the api.
    # @param [CancelSingleClassRequest] request Required parameter: Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [CancelSingleClassResponse] response from the API call
    def cancel_single_class(version,
                            request,
                            site_id,
                            authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/cancelsingleclass',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(CancelSingleClassResponse.method(:from_hash)))
        .execute
    end

    # Remove a client from a class.
    # @param [String] version Required parameter: version of the api.
    # @param [RemoveClientFromClassRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [RemoveClientFromClassResponse] response from the API call
    def remove_client_from_class(version,
                                 request,
                                 site_id,
                                 authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/removeclientfromclass',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(RemoveClientFromClassResponse.method(:from_hash)))
        .execute
    end

    # This endpoint can be utilized for removing multiple clients from multiple
    # classes in one request.
    # @param [String] version Required parameter: version of the api.
    # @param [RemoveClientsFromClassesRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [RemoveClientsFromClassesResponse] response from the API call
    def remove_clients_from_classes(version,
                                    request,
                                    site_id,
                                    authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/removeclientsfromclasses',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(RemoveClientsFromClassesResponse.method(:from_hash)))
        .execute
    end

    # This endpoint does not return a response. If a call to this endpoint
    # results in a 200 OK HTTP status code, then the call was successful.
    # @param [String] version Required parameter: version of the api.
    # @param [Array[Integer]] request_waitlist_entry_ids Required parameter: A
    # list of `WaitlistEntryIds` to remove from the waiting list.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [Object] response from the API call
    def remove_from_waitlist(version,
                             request_waitlist_entry_ids,
                             site_id,
                             authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/removefromwaitlist',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .query_param(new_parameter(request_waitlist_entry_ids, key: 'request.waitlistEntryIds'))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:json_deserialize)))
        .execute
    end

    # Substitute a class teacher.
    # @param [String] version Required parameter: version of the api.
    # @param [SubstituteClassTeacherRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [SubstituteClassTeacherResponse] response from the API call
    def substitute_class_teacher(version,
                                 request,
                                 site_id,
                                 authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/substituteclassteacher',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(SubstituteClassTeacherResponse.method(:from_hash)))
        .execute
    end

    # This endpoint updates a class schedule.
    # @param [String] version Required parameter: version of the api.
    # @param [UpdateClassEnrollmentScheduleRequest] request Required parameter:
    # Example:
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @return [WrittenClassSchedulesInfo] response from the API call
    def update_class_schedule(version,
                              request,
                              site_id,
                              authorization: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/public/v{version}/class/updateclassschedule',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .body_param(new_parameter(request))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(WrittenClassSchedulesInfo.method(:from_hash)))
        .execute
    end
  end
end
