# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # PayrollController
  class PayrollController < BaseController
    # A staff authorization token is not required for this endpoint, but if one
    # is passed, its permissions are honored. Depending on the access
    # permissions configured for the staff member whose token is passed,
    # the endpoint returns either only the payroll information for that staff
    # member or it returns the payroll information for all staff members.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date_time Optional parameter: The end of the
    # date range for the payroll information to be returned. The maximum allowed
    # date range is 14 days.<br />  Default: **Today’s date**  * If you do not
    # supply an `EndDateTime`, the data returns for the period from the
    # `StartDateTime` that you supply to today’s date.  * If you do not supply
    # an `EndDateTime` or a `StartDateTime`, data returns for the seven days
    # prior to today’s date.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: A LocationId that
    # you want to retrieve payroll information for. If you do not supply a
    # `LocationId`, data from all locations is returned.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Integer] request_staff_id Optional parameter: A list of staff IDs
    # that you want to retrieve payroll information for. If you do not supply a
    # `StaffId`, all active staff members return, ordered by staff ID.
    # @param [DateTime] request_start_date_time Optional parameter: The
    # beginning of the date range for the payroll information to be returned.
    # The maximum allowed date range is 14 days.  * If you do not supply a
    # `StartDateTime`, data returns for the seven days prior to the
    # `EndDateTime` that you supply.  * If you do not supply either a
    # `StartDateTime` or an `EndDateTime`, the data returns for seven days prior
    # to today’s date.
    # @return [GetCommissionsResponse] response from the API call
    def get_commissions(version,
                        site_id,
                        authorization: nil,
                        request_end_date_time: nil,
                        request_limit: nil,
                        request_location_id: nil,
                        request_offset: nil,
                        request_staff_id: nil,
                        request_start_date_time: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/payroll/commissions',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date_time, key: 'request.endDateTime'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_staff_id, key: 'request.staffId'))
                   .query_param(new_parameter(request_start_date_time, key: 'request.startDateTime'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetCommissionsResponse.method(:from_hash)))
        .execute
    end

    # A staff authorization token is not required for this endpoint, but if one
    # is passed, its permissions are honored. Depending on the access
    # permissions configured for the staff member whose token is passed, the
    # endpoint returns either only the payroll information for that staff member
    # or it returns the payroll information for all staff members.
    # Note that if a staff member is not paid for a class, earnings of zero are
    # returned by this endpoint.
    # Note that this endpoint calculates both bonus and no-reg rates for
    # assistants.These rates are not supported by the Payroll report in the web
    # interface.
    # Note that this endpoint returns both the teacher’s adjusted rate and the
    # assistant’s pay rate when the assistant is paid by the teacher.The Payroll
    # report in the web interface only returns the teacher’s adjusted rate.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date_time Optional parameter: The end of the
    # date range for the payroll information to be returned. The maximum allowed
    # date range is 14 days.<br />  Default: **Today’s date**  * If you do not
    # supply an `EndDateTime`, the data returns for the period from the
    # `StartDateTime` that you supply to today’s date.  * If you do not supply
    # an `EndDateTime` or a `StartDateTime`, data returns for the seven days
    # prior to today’s date.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: A LocationId that
    # you want to retrieve payroll information for. If you do not supply a
    # `LocationId`, data from all locations is returned.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Integer] request_scheduled_service_id Optional parameter: Filters
    # the results to a single scheduled service. This parameter must be used
    # with a single ScheduledServiceType.
    # @param [String] request_scheduled_service_type Optional parameter: Filters
    # the results to schedule service earnings for specific types of services.
    # Possible values:  * Class  * Appointment
    # @param [Integer] request_staff_id Optional parameter: A list of staff IDs
    # that you want to retrieve payroll information for. If you do not supply a
    # `StaffId`, all active staff members return, ordered by staff ID.
    # @param [DateTime] request_start_date_time Optional parameter: The
    # beginning of the date range for the payroll information to be returned.
    # The maximum allowed date range is 14 days.  * If you do not supply a
    # `StartDateTime`, data returns for the seven days prior to the
    # `EndDateTime` that you supply.  * If you do not supply either a
    # `StartDateTime` or an `EndDateTime`, the data returns for seven days prior
    # to today’s date.
    # @return [GetScheduledServiceEarningsResponse] response from the API call
    def get_scheduled_service_earnings(version,
                                       site_id,
                                       authorization: nil,
                                       request_end_date_time: nil,
                                       request_limit: nil,
                                       request_location_id: nil,
                                       request_offset: nil,
                                       request_scheduled_service_id: nil,
                                       request_scheduled_service_type: nil,
                                       request_staff_id: nil,
                                       request_start_date_time: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/payroll/scheduledserviceearnings',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date_time, key: 'request.endDateTime'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_scheduled_service_id, key: 'request.scheduledServiceId'))
                   .query_param(new_parameter(request_scheduled_service_type, key: 'request.scheduledServiceType'))
                   .query_param(new_parameter(request_staff_id, key: 'request.staffId'))
                   .query_param(new_parameter(request_start_date_time, key: 'request.startDateTime'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetScheduledServiceEarningsResponse.method(:from_hash)))
        .execute
    end

    # This endpoint returns information for all locations. The **View reports
    # for all locations permission **is not supported for staff auth tokens.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date_time Optional parameter: The end of the
    # date range for the payroll information to be returned. The maximum allowed
    # date range is 14 days.<br />  Default: **Today’s date**  * If you do not
    # supply an `EndDateTime`, the data returns for the period from the
    # `StartDateTime` that you supply to today’s date.  * If you do not supply
    # an `EndDateTime` or a `StartDateTime`, data returns for the seven days
    # prior to today’s date.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: A LocationId that
    # you want to retrieve payroll information for. If you do not supply a
    # `LocationId`, data from all locations is returned.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Integer] request_staff_id Optional parameter: A list of staff IDs
    # that you want to retrieve payroll information for. If you do not supply a
    # `StaffId`, all active staff members return, ordered by staff ID.
    # @param [DateTime] request_start_date_time Optional parameter: The
    # beginning of the date range for the payroll information to be returned.
    # The maximum allowed date range is 14 days.  * If you do not supply a
    # `StartDateTime`, data returns for the seven days prior to the
    # `EndDateTime` that you supply.  * If you do not supply either a
    # `StartDateTime` or an `EndDateTime`, the data returns for seven days prior
    # to today’s date.
    # @return [GetTimeCardsResponse] response from the API call
    def get_time_cards(version,
                       site_id,
                       authorization: nil,
                       request_end_date_time: nil,
                       request_limit: nil,
                       request_location_id: nil,
                       request_offset: nil,
                       request_staff_id: nil,
                       request_start_date_time: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/payroll/timecards',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date_time, key: 'request.endDateTime'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_staff_id, key: 'request.staffId'))
                   .query_param(new_parameter(request_start_date_time, key: 'request.startDateTime'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetTimeCardsResponse.method(:from_hash)))
        .execute
    end

    # A staff authorization token is not required for this endpoint, but if one
    # is passed, its permissions are honored. Depending on the access
    # permissions configured for the staff member whose token is passed,
    # the endpoint returns either only the payroll information for that staff
    # member or it returns the payroll information for all staff members.
    # This endpoint returns information for all locations.The** View reports for
    # all locations **permission is not supported for staff auth tokens.
    # @param [String] version Required parameter: version of the api.
    # @param [String] site_id Required parameter: ID of the site from which to
    # pull data.
    # @param [String] authorization Optional parameter: A staff user
    # authorization token.
    # @param [DateTime] request_end_date_time Optional parameter: The end of the
    # date range for the payroll information to be returned. The maximum allowed
    # date range is 14 days.<br />  Default: **Today’s date**  * If you do not
    # supply an `EndDateTime`, the data returns for the period from the
    # `StartDateTime` that you supply to today’s date.  * If you do not supply
    # an `EndDateTime` or a `StartDateTime`, data returns for the seven days
    # prior to today’s date.
    # @param [Integer] request_limit Optional parameter: Number of results to
    # include, defaults to 100
    # @param [Integer] request_location_id Optional parameter: A LocationId that
    # you want to retrieve payroll information for. If you do not supply a
    # `LocationId`, data from all locations is returned.
    # @param [Integer] request_offset Optional parameter: Page offset, defaults
    # to 0.
    # @param [Integer] request_staff_id Optional parameter: A list of staff IDs
    # that you want to retrieve payroll information for. If you do not supply a
    # `StaffId`, all active staff members return, ordered by staff ID.
    # @param [DateTime] request_start_date_time Optional parameter: The
    # beginning of the date range for the payroll information to be returned.
    # The maximum allowed date range is 14 days.  * If you do not supply a
    # `StartDateTime`, data returns for the seven days prior to the
    # `EndDateTime` that you supply.  * If you do not supply either a
    # `StartDateTime` or an `EndDateTime`, the data returns for seven days prior
    # to today’s date.
    # @return [GetTipsResponse] response from the API call
    def get_tips(version,
                 site_id,
                 authorization: nil,
                 request_end_date_time: nil,
                 request_limit: nil,
                 request_location_id: nil,
                 request_offset: nil,
                 request_staff_id: nil,
                 request_start_date_time: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/public/v{version}/payroll/tips',
                                     Server::DEFAULT)
                   .template_param(new_parameter(version, key: 'version')
                                    .should_encode(true))
                   .header_param(new_parameter(site_id, key: 'siteId'))
                   .header_param(new_parameter(authorization, key: 'authorization'))
                   .query_param(new_parameter(request_end_date_time, key: 'request.endDateTime'))
                   .query_param(new_parameter(request_limit, key: 'request.limit'))
                   .query_param(new_parameter(request_location_id, key: 'request.locationId'))
                   .query_param(new_parameter(request_offset, key: 'request.offset'))
                   .query_param(new_parameter(request_staff_id, key: 'request.staffId'))
                   .query_param(new_parameter(request_start_date_time, key: 'request.startDateTime'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('API-Key')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(GetTipsResponse.method(:from_hash)))
        .execute
    end
  end
end
