# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # CancelSingleClassRequest Model.
  class CancelSingleClassRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Class ID to lookup.
    # @return [Integer]
    attr_accessor :class_id

    # When `true`, indicates that this class is hidden when cancelled.
    # When `false`, indicates that this class is not hidden when cancelled.
    # @return [TrueClass | FalseClass]
    attr_accessor :hide_cancel

    # When `true`, sends the client an automatic email about the cancellation,
    # if the client has opted to receive email.
    # @return [TrueClass | FalseClass]
    attr_accessor :send_client_email

    # When `true`, sends the staff an automatic email about the cancellation, if
    # the staff has opted to receive email.
    # @return [TrueClass | FalseClass]
    attr_accessor :send_staff_email

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['class_id'] = 'ClassID'
      @_hash['hide_cancel'] = 'HideCancel'
      @_hash['send_client_email'] = 'SendClientEmail'
      @_hash['send_staff_email'] = 'SendStaffEmail'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        class_id
        hide_cancel
        send_client_email
        send_staff_email
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(class_id = SKIP, hide_cancel = SKIP,
                   send_client_email = SKIP, send_staff_email = SKIP)
      @class_id = class_id unless class_id == SKIP
      @hide_cancel = hide_cancel unless hide_cancel == SKIP
      @send_client_email = send_client_email unless send_client_email == SKIP
      @send_staff_email = send_staff_email unless send_staff_email == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      class_id = hash.key?('ClassID') ? hash['ClassID'] : SKIP
      hide_cancel = hash.key?('HideCancel') ? hash['HideCancel'] : SKIP
      send_client_email =
        hash.key?('SendClientEmail') ? hash['SendClientEmail'] : SKIP
      send_staff_email =
        hash.key?('SendStaffEmail') ? hash['SendStaffEmail'] : SKIP

      # Create object from extracted values.
      CancelSingleClassRequest.new(class_id,
                                   hide_cancel,
                                   send_client_email,
                                   send_staff_email)
    end
  end
end
