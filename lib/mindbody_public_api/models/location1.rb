# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Location1 Model.
  class Location1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :business_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :site_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :business_description

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :additional_image_ur_ls

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :facility_square_feet

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :pro_spa_finder_site

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :has_classes

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone_extension

    # TODO: Write general description for this method
    # @return [ActionEnum]
    attr_accessor :action

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address2

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :tax1

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :tax2

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :tax3

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :tax4

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :tax5

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state_prov_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :postal_code

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :latitude

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :longitude

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :distance_in_miles

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :image_url

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :has_site

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :can_book

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :number_treatment_rooms

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :active

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :inv_active

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :ws_show

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :contact_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ship_address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ship_state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ship_postal

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ship_phone

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ship_poc

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :tax_grouping

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :label_tax1

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :label_tax2

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :label_tax3

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :label_tax4

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :label_tax5

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :wac

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ship_address2

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :master_loc_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :street_address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :country

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ext

    # TODO: Write general description for this method
    # @return [Array[Amenity1]]
    attr_accessor :amenities

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_number_of_deals

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_number_of_ratings

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :average_rating

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['business_id'] = 'BusinessId'
      @_hash['site_id'] = 'SiteId'
      @_hash['business_description'] = 'BusinessDescription'
      @_hash['additional_image_ur_ls'] = 'AdditionalImageURLs'
      @_hash['facility_square_feet'] = 'FacilitySquareFeet'
      @_hash['pro_spa_finder_site'] = 'ProSpaFinderSite'
      @_hash['has_classes'] = 'HasClasses'
      @_hash['phone_extension'] = 'PhoneExtension'
      @_hash['action'] = 'Action'
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['address'] = 'Address'
      @_hash['address2'] = 'Address2'
      @_hash['tax1'] = 'Tax1'
      @_hash['tax2'] = 'Tax2'
      @_hash['tax3'] = 'Tax3'
      @_hash['tax4'] = 'Tax4'
      @_hash['tax5'] = 'Tax5'
      @_hash['phone'] = 'Phone'
      @_hash['city'] = 'City'
      @_hash['state_prov_code'] = 'StateProvCode'
      @_hash['postal_code'] = 'PostalCode'
      @_hash['latitude'] = 'Latitude'
      @_hash['longitude'] = 'Longitude'
      @_hash['distance_in_miles'] = 'DistanceInMiles'
      @_hash['image_url'] = 'ImageURL'
      @_hash['description'] = 'Description'
      @_hash['has_site'] = 'HasSite'
      @_hash['can_book'] = 'CanBook'
      @_hash['number_treatment_rooms'] = 'NumberTreatmentRooms'
      @_hash['active'] = 'Active'
      @_hash['inv_active'] = 'InvActive'
      @_hash['ws_show'] = 'WsShow'
      @_hash['email'] = 'Email'
      @_hash['contact_name'] = 'ContactName'
      @_hash['ship_address'] = 'ShipAddress'
      @_hash['ship_state'] = 'ShipState'
      @_hash['ship_postal'] = 'ShipPostal'
      @_hash['ship_phone'] = 'ShipPhone'
      @_hash['ship_poc'] = 'ShipPOC'
      @_hash['tax_grouping'] = 'TaxGrouping'
      @_hash['label_tax1'] = 'LabelTax1'
      @_hash['label_tax2'] = 'LabelTax2'
      @_hash['label_tax3'] = 'LabelTax3'
      @_hash['label_tax4'] = 'LabelTax4'
      @_hash['label_tax5'] = 'LabelTax5'
      @_hash['wac'] = 'WAC'
      @_hash['ship_address2'] = 'ShipAddress2'
      @_hash['master_loc_id'] = 'MasterLocId'
      @_hash['street_address'] = 'StreetAddress'
      @_hash['country'] = 'Country'
      @_hash['ext'] = 'Ext'
      @_hash['amenities'] = 'Amenities'
      @_hash['total_number_of_deals'] = 'TotalNumberOfDeals'
      @_hash['total_number_of_ratings'] = 'TotalNumberOfRatings'
      @_hash['average_rating'] = 'AverageRating'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        business_id
        site_id
        business_description
        additional_image_ur_ls
        facility_square_feet
        pro_spa_finder_site
        has_classes
        phone_extension
        action
        id
        name
        address
        address2
        tax1
        tax2
        tax3
        tax4
        tax5
        phone
        city
        state_prov_code
        postal_code
        latitude
        longitude
        distance_in_miles
        image_url
        description
        has_site
        can_book
        number_treatment_rooms
        active
        inv_active
        ws_show
        email
        contact_name
        ship_address
        ship_state
        ship_postal
        ship_phone
        ship_poc
        tax_grouping
        label_tax1
        label_tax2
        label_tax3
        label_tax4
        label_tax5
        wac
        ship_address2
        master_loc_id
        street_address
        country
        ext
        amenities
        total_number_of_deals
        total_number_of_ratings
        average_rating
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(business_id = SKIP, site_id = SKIP,
                   business_description = SKIP, additional_image_ur_ls = SKIP,
                   facility_square_feet = SKIP, pro_spa_finder_site = SKIP,
                   has_classes = SKIP, phone_extension = SKIP, action = SKIP,
                   id = SKIP, name = SKIP, address = SKIP, address2 = SKIP,
                   tax1 = SKIP, tax2 = SKIP, tax3 = SKIP, tax4 = SKIP,
                   tax5 = SKIP, phone = SKIP, city = SKIP,
                   state_prov_code = SKIP, postal_code = SKIP, latitude = SKIP,
                   longitude = SKIP, distance_in_miles = SKIP, image_url = SKIP,
                   description = SKIP, has_site = SKIP, can_book = SKIP,
                   number_treatment_rooms = SKIP, active = SKIP,
                   inv_active = SKIP, ws_show = SKIP, email = SKIP,
                   contact_name = SKIP, ship_address = SKIP, ship_state = SKIP,
                   ship_postal = SKIP, ship_phone = SKIP, ship_poc = SKIP,
                   tax_grouping = SKIP, label_tax1 = SKIP, label_tax2 = SKIP,
                   label_tax3 = SKIP, label_tax4 = SKIP, label_tax5 = SKIP,
                   wac = SKIP, ship_address2 = SKIP, master_loc_id = SKIP,
                   street_address = SKIP, country = SKIP, ext = SKIP,
                   amenities = SKIP, total_number_of_deals = SKIP,
                   total_number_of_ratings = SKIP, average_rating = SKIP)
      @business_id = business_id unless business_id == SKIP
      @site_id = site_id unless site_id == SKIP
      @business_description = business_description unless business_description == SKIP
      @additional_image_ur_ls = additional_image_ur_ls unless additional_image_ur_ls == SKIP
      @facility_square_feet = facility_square_feet unless facility_square_feet == SKIP
      @pro_spa_finder_site = pro_spa_finder_site unless pro_spa_finder_site == SKIP
      @has_classes = has_classes unless has_classes == SKIP
      @phone_extension = phone_extension unless phone_extension == SKIP
      @action = action unless action == SKIP
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @address = address unless address == SKIP
      @address2 = address2 unless address2 == SKIP
      @tax1 = tax1 unless tax1 == SKIP
      @tax2 = tax2 unless tax2 == SKIP
      @tax3 = tax3 unless tax3 == SKIP
      @tax4 = tax4 unless tax4 == SKIP
      @tax5 = tax5 unless tax5 == SKIP
      @phone = phone unless phone == SKIP
      @city = city unless city == SKIP
      @state_prov_code = state_prov_code unless state_prov_code == SKIP
      @postal_code = postal_code unless postal_code == SKIP
      @latitude = latitude unless latitude == SKIP
      @longitude = longitude unless longitude == SKIP
      @distance_in_miles = distance_in_miles unless distance_in_miles == SKIP
      @image_url = image_url unless image_url == SKIP
      @description = description unless description == SKIP
      @has_site = has_site unless has_site == SKIP
      @can_book = can_book unless can_book == SKIP
      @number_treatment_rooms = number_treatment_rooms unless number_treatment_rooms == SKIP
      @active = active unless active == SKIP
      @inv_active = inv_active unless inv_active == SKIP
      @ws_show = ws_show unless ws_show == SKIP
      @email = email unless email == SKIP
      @contact_name = contact_name unless contact_name == SKIP
      @ship_address = ship_address unless ship_address == SKIP
      @ship_state = ship_state unless ship_state == SKIP
      @ship_postal = ship_postal unless ship_postal == SKIP
      @ship_phone = ship_phone unless ship_phone == SKIP
      @ship_poc = ship_poc unless ship_poc == SKIP
      @tax_grouping = tax_grouping unless tax_grouping == SKIP
      @label_tax1 = label_tax1 unless label_tax1 == SKIP
      @label_tax2 = label_tax2 unless label_tax2 == SKIP
      @label_tax3 = label_tax3 unless label_tax3 == SKIP
      @label_tax4 = label_tax4 unless label_tax4 == SKIP
      @label_tax5 = label_tax5 unless label_tax5 == SKIP
      @wac = wac unless wac == SKIP
      @ship_address2 = ship_address2 unless ship_address2 == SKIP
      @master_loc_id = master_loc_id unless master_loc_id == SKIP
      @street_address = street_address unless street_address == SKIP
      @country = country unless country == SKIP
      @ext = ext unless ext == SKIP
      @amenities = amenities unless amenities == SKIP
      @total_number_of_deals = total_number_of_deals unless total_number_of_deals == SKIP
      @total_number_of_ratings = total_number_of_ratings unless total_number_of_ratings == SKIP
      @average_rating = average_rating unless average_rating == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      business_id = hash.key?('BusinessId') ? hash['BusinessId'] : SKIP
      site_id = hash.key?('SiteId') ? hash['SiteId'] : SKIP
      business_description =
        hash.key?('BusinessDescription') ? hash['BusinessDescription'] : SKIP
      additional_image_ur_ls =
        hash.key?('AdditionalImageURLs') ? hash['AdditionalImageURLs'] : SKIP
      facility_square_feet =
        hash.key?('FacilitySquareFeet') ? hash['FacilitySquareFeet'] : SKIP
      pro_spa_finder_site =
        hash.key?('ProSpaFinderSite') ? hash['ProSpaFinderSite'] : SKIP
      has_classes = hash.key?('HasClasses') ? hash['HasClasses'] : SKIP
      phone_extension =
        hash.key?('PhoneExtension') ? hash['PhoneExtension'] : SKIP
      action = hash.key?('Action') ? hash['Action'] : SKIP
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      address = hash.key?('Address') ? hash['Address'] : SKIP
      address2 = hash.key?('Address2') ? hash['Address2'] : SKIP
      tax1 = hash.key?('Tax1') ? hash['Tax1'] : SKIP
      tax2 = hash.key?('Tax2') ? hash['Tax2'] : SKIP
      tax3 = hash.key?('Tax3') ? hash['Tax3'] : SKIP
      tax4 = hash.key?('Tax4') ? hash['Tax4'] : SKIP
      tax5 = hash.key?('Tax5') ? hash['Tax5'] : SKIP
      phone = hash.key?('Phone') ? hash['Phone'] : SKIP
      city = hash.key?('City') ? hash['City'] : SKIP
      state_prov_code =
        hash.key?('StateProvCode') ? hash['StateProvCode'] : SKIP
      postal_code = hash.key?('PostalCode') ? hash['PostalCode'] : SKIP
      latitude = hash.key?('Latitude') ? hash['Latitude'] : SKIP
      longitude = hash.key?('Longitude') ? hash['Longitude'] : SKIP
      distance_in_miles =
        hash.key?('DistanceInMiles') ? hash['DistanceInMiles'] : SKIP
      image_url = hash.key?('ImageURL') ? hash['ImageURL'] : SKIP
      description = hash.key?('Description') ? hash['Description'] : SKIP
      has_site = hash.key?('HasSite') ? hash['HasSite'] : SKIP
      can_book = hash.key?('CanBook') ? hash['CanBook'] : SKIP
      number_treatment_rooms =
        hash.key?('NumberTreatmentRooms') ? hash['NumberTreatmentRooms'] : SKIP
      active = hash.key?('Active') ? hash['Active'] : SKIP
      inv_active = hash.key?('InvActive') ? hash['InvActive'] : SKIP
      ws_show = hash.key?('WsShow') ? hash['WsShow'] : SKIP
      email = hash.key?('Email') ? hash['Email'] : SKIP
      contact_name = hash.key?('ContactName') ? hash['ContactName'] : SKIP
      ship_address = hash.key?('ShipAddress') ? hash['ShipAddress'] : SKIP
      ship_state = hash.key?('ShipState') ? hash['ShipState'] : SKIP
      ship_postal = hash.key?('ShipPostal') ? hash['ShipPostal'] : SKIP
      ship_phone = hash.key?('ShipPhone') ? hash['ShipPhone'] : SKIP
      ship_poc = hash.key?('ShipPOC') ? hash['ShipPOC'] : SKIP
      tax_grouping = hash.key?('TaxGrouping') ? hash['TaxGrouping'] : SKIP
      label_tax1 = hash.key?('LabelTax1') ? hash['LabelTax1'] : SKIP
      label_tax2 = hash.key?('LabelTax2') ? hash['LabelTax2'] : SKIP
      label_tax3 = hash.key?('LabelTax3') ? hash['LabelTax3'] : SKIP
      label_tax4 = hash.key?('LabelTax4') ? hash['LabelTax4'] : SKIP
      label_tax5 = hash.key?('LabelTax5') ? hash['LabelTax5'] : SKIP
      wac = hash.key?('WAC') ? hash['WAC'] : SKIP
      ship_address2 = hash.key?('ShipAddress2') ? hash['ShipAddress2'] : SKIP
      master_loc_id = hash.key?('MasterLocId') ? hash['MasterLocId'] : SKIP
      street_address = hash.key?('StreetAddress') ? hash['StreetAddress'] : SKIP
      country = hash.key?('Country') ? hash['Country'] : SKIP
      ext = hash.key?('Ext') ? hash['Ext'] : SKIP
      # Parameter is an array, so we need to iterate through it
      amenities = nil
      unless hash['Amenities'].nil?
        amenities = []
        hash['Amenities'].each do |structure|
          amenities << (Amenity1.from_hash(structure) if structure)
        end
      end

      amenities = SKIP unless hash.key?('Amenities')
      total_number_of_deals =
        hash.key?('TotalNumberOfDeals') ? hash['TotalNumberOfDeals'] : SKIP
      total_number_of_ratings =
        hash.key?('TotalNumberOfRatings') ? hash['TotalNumberOfRatings'] : SKIP
      average_rating = hash.key?('AverageRating') ? hash['AverageRating'] : SKIP

      # Create object from extracted values.
      Location1.new(business_id,
                    site_id,
                    business_description,
                    additional_image_ur_ls,
                    facility_square_feet,
                    pro_spa_finder_site,
                    has_classes,
                    phone_extension,
                    action,
                    id,
                    name,
                    address,
                    address2,
                    tax1,
                    tax2,
                    tax3,
                    tax4,
                    tax5,
                    phone,
                    city,
                    state_prov_code,
                    postal_code,
                    latitude,
                    longitude,
                    distance_in_miles,
                    image_url,
                    description,
                    has_site,
                    can_book,
                    number_treatment_rooms,
                    active,
                    inv_active,
                    ws_show,
                    email,
                    contact_name,
                    ship_address,
                    ship_state,
                    ship_postal,
                    ship_phone,
                    ship_poc,
                    tax_grouping,
                    label_tax1,
                    label_tax2,
                    label_tax3,
                    label_tax4,
                    label_tax5,
                    wac,
                    ship_address2,
                    master_loc_id,
                    street_address,
                    country,
                    ext,
                    amenities,
                    total_number_of_deals,
                    total_number_of_ratings,
                    average_rating)
    end
  end
end
