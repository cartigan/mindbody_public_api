# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module MindbodyPublicApi
  # Contract Model.
  class Contract < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The contract’s ID at the subscriber’s business.
    # @return [Integer]
    attr_accessor :id

    # The name of the contract.
    # @return [String]
    attr_accessor :name

    # A description of the contract.
    # @return [String]
    attr_accessor :description

    # The ID of the membership that was assigned to the client when the client
    # signed up for a contract.
    # @return [Integer]
    attr_accessor :assigns_membership_id

    # The name of the membership that was assigned to the client when the client
    # signed up for this contract.
    # @return [String]
    attr_accessor :assigns_membership_name

    # When `true`, indicates that this membership is intended to be shown to
    # clients in client experiences.<br />
    # When `false`, this contract should only be shown to staff members.
    # @return [TrueClass | FalseClass]
    attr_accessor :sold_online

    # Contains information about the items in the contract.
    # @return [Array[ContractItem]]
    attr_accessor :contract_items

    # Defines whether this contract is treated as an introductory offer. If this
    # is an introductory offer, then clients are always charged a set number of
    # times rather than month to month, using their AutoPays. Possible values
    # are:
    # * None
    # * NewConsumer
    # * NewAndReturningConsumer
    # @return [String]
    attr_accessor :intro_offer

    # Defines whether this contract is treated as an introductory offer. If this
    # is an introductory offer, then clients are always charged a set number of
    # times rather than month to month, using their AutoPays. Possible values
    # are:
    # * None
    # * NewConsumer
    # * NewAndReturningConsumer
    # @return [AutopaySchedule]
    attr_accessor :autopay_schedule

    # The number of times that the AutoPay is to be run. This value is null if
    # `FrequencyType` is `MonthToMonth`.
    # @return [Integer]
    attr_accessor :number_of_autopays

    # Defines whether the AutoPay, if applicable to this contract, runs on a set
    # schedule or when the pricing option runs out or expires. Possible values
    # are:
    # * OnSetSchedule
    # * PricingOptionRunsOutOrExpires
    # @return [String]
    attr_accessor :autopay_trigger_type

    # The renewal action to be taken when this AutoPay is completed. Possible
    # values are:
    # * ContractExpires
    # * ContractAutomaticallyRenews
    # @return [String]
    attr_accessor :action_upon_completion_of_autopays

    # The value that indicates when clients are charged. Possible values are:
    # * OnSaleDate
    # * FirstOfTheMonth
    # * FifteenthOfTheMonth
    # * LastDayOfTheMonth
    # * FirstOrFifteenthOfTheMonth
    # * FirstOrSixteenthOfTheMonth
    # * FifteenthOrEndOfTheMonth
    # * SpecificDate
    # @return [String]
    attr_accessor :clients_charged_on

    # If `ClientsChargedOn` is defined as a specific date, this property holds
    # the value of that date. Otherwise, this property is null.
    # @return [DateTime]
    attr_accessor :clients_charged_on_specific_date

    # The calculated discount applied to the items in this contract.
    # @return [Float]
    attr_accessor :discount_amount

    # The amount of the deposit required for this contract.
    # @return [Float]
    attr_accessor :deposit_amount

    # When `true`, indicates that the first payment for the AutoPay is free.
    # @return [TrueClass | FalseClass]
    attr_accessor :first_autopay_free

    # When `true`, indicates that the last payment for the AutoPay is free.
    # @return [TrueClass | FalseClass]
    attr_accessor :last_autopay_free

    # When `true`, indicates that the client can terminate this contract on the
    # Internet.
    # @return [TrueClass | FalseClass]
    attr_accessor :client_terminate_online

    # Contains information about the memberships that can purchase this
    # contract. If null, then no membership restrictions exist, and anyone can
    # purchase the contract.
    # @return [Array[MembershipTypeRestriction]]
    attr_accessor :membership_type_restrictions

    # The IDs of the locations where this contract may be sold. If there are no
    # restrictions, this value is null.
    # @return [Array[Integer]]
    attr_accessor :location_purchase_restriction_ids

    # Location names where the contract may be purchased. If this value is null,
    # there are no restrictions.
    # @return [Array[String]]
    attr_accessor :location_purchase_restriction_names

    # Business-defined terms and conditions for the contract.
    # @return [String]
    attr_accessor :agreement_terms

    # When `true`, clients who purchase the contract are prompted to agree to
    # the terms of the contract the next time that they log in.
    # @return [TrueClass | FalseClass]
    attr_accessor :requires_electronic_confirmation

    # When `true`, this contract establishes an AutoPay on the client’s account.
    # @return [TrueClass | FalseClass]
    attr_accessor :autopay_enabled

    # The subtotal of the amount that the client is to be charged when signing
    # up for the contract.
    # @return [Float]
    attr_accessor :first_payment_amount_subtotal

    # The amount of tax that the client is to be charged when signing up for the
    # contract.
    # @return [Float]
    attr_accessor :first_payment_amount_tax

    # The total amount that the client is to be charged when signing up for the
    # contract.
    # @return [Float]
    attr_accessor :first_payment_amount_total

    # The subtotal amount that the client is to be charged on an ongoing basis.
    # @return [Float]
    attr_accessor :recurring_payment_amount_subtotal

    # The amount of tax the client is to be charged on an ongoing basis.
    # @return [Float]
    attr_accessor :recurring_payment_amount_tax

    # The total amount that the client is to be charged on an ongoing basis.
    # @return [Float]
    attr_accessor :recurring_payment_amount_total

    # The subtotal amount that the client is to be charged over the lifespan of
    # the contract.
    # @return [Float]
    attr_accessor :total_contract_amount_subtotal

    # The total amount of tax the client is to be charged over the lifespan of
    # the contract.
    # @return [Float]
    attr_accessor :total_contract_amount_tax

    # The total amount the client is to be charged over the lifespan of the
    # contract.
    # @return [Float]
    attr_accessor :total_contract_amount_total

    # Subtotal promotional period
    # @return [Float]
    attr_accessor :promo_payment_amount_subtotal

    # Taxes of promotional period
    # @return [Float]
    attr_accessor :promo_payment_amount_tax

    # Total of promotional period
    # @return [Float]
    attr_accessor :promo_payment_amount_total

    # Number of times that the AutoPay runs under the promotional period
    # @return [Integer]
    attr_accessor :number_of_promo_autopays

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['description'] = 'Description'
      @_hash['assigns_membership_id'] = 'AssignsMembershipId'
      @_hash['assigns_membership_name'] = 'AssignsMembershipName'
      @_hash['sold_online'] = 'SoldOnline'
      @_hash['contract_items'] = 'ContractItems'
      @_hash['intro_offer'] = 'IntroOffer'
      @_hash['autopay_schedule'] = 'AutopaySchedule'
      @_hash['number_of_autopays'] = 'NumberOfAutopays'
      @_hash['autopay_trigger_type'] = 'AutopayTriggerType'
      @_hash['action_upon_completion_of_autopays'] =
        'ActionUponCompletionOfAutopays'
      @_hash['clients_charged_on'] = 'ClientsChargedOn'
      @_hash['clients_charged_on_specific_date'] =
        'ClientsChargedOnSpecificDate'
      @_hash['discount_amount'] = 'DiscountAmount'
      @_hash['deposit_amount'] = 'DepositAmount'
      @_hash['first_autopay_free'] = 'FirstAutopayFree'
      @_hash['last_autopay_free'] = 'LastAutopayFree'
      @_hash['client_terminate_online'] = 'ClientTerminateOnline'
      @_hash['membership_type_restrictions'] = 'MembershipTypeRestrictions'
      @_hash['location_purchase_restriction_ids'] =
        'LocationPurchaseRestrictionIds'
      @_hash['location_purchase_restriction_names'] =
        'LocationPurchaseRestrictionNames'
      @_hash['agreement_terms'] = 'AgreementTerms'
      @_hash['requires_electronic_confirmation'] =
        'RequiresElectronicConfirmation'
      @_hash['autopay_enabled'] = 'AutopayEnabled'
      @_hash['first_payment_amount_subtotal'] = 'FirstPaymentAmountSubtotal'
      @_hash['first_payment_amount_tax'] = 'FirstPaymentAmountTax'
      @_hash['first_payment_amount_total'] = 'FirstPaymentAmountTotal'
      @_hash['recurring_payment_amount_subtotal'] =
        'RecurringPaymentAmountSubtotal'
      @_hash['recurring_payment_amount_tax'] = 'RecurringPaymentAmountTax'
      @_hash['recurring_payment_amount_total'] = 'RecurringPaymentAmountTotal'
      @_hash['total_contract_amount_subtotal'] = 'TotalContractAmountSubtotal'
      @_hash['total_contract_amount_tax'] = 'TotalContractAmountTax'
      @_hash['total_contract_amount_total'] = 'TotalContractAmountTotal'
      @_hash['promo_payment_amount_subtotal'] = 'PromoPaymentAmountSubtotal'
      @_hash['promo_payment_amount_tax'] = 'PromoPaymentAmountTax'
      @_hash['promo_payment_amount_total'] = 'PromoPaymentAmountTotal'
      @_hash['number_of_promo_autopays'] = 'NumberOfPromoAutopays'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        description
        assigns_membership_id
        assigns_membership_name
        sold_online
        contract_items
        intro_offer
        autopay_schedule
        number_of_autopays
        autopay_trigger_type
        action_upon_completion_of_autopays
        clients_charged_on
        clients_charged_on_specific_date
        discount_amount
        deposit_amount
        first_autopay_free
        last_autopay_free
        client_terminate_online
        membership_type_restrictions
        location_purchase_restriction_ids
        location_purchase_restriction_names
        agreement_terms
        requires_electronic_confirmation
        autopay_enabled
        first_payment_amount_subtotal
        first_payment_amount_tax
        first_payment_amount_total
        recurring_payment_amount_subtotal
        recurring_payment_amount_tax
        recurring_payment_amount_total
        total_contract_amount_subtotal
        total_contract_amount_tax
        total_contract_amount_total
        promo_payment_amount_subtotal
        promo_payment_amount_tax
        promo_payment_amount_total
        number_of_promo_autopays
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, name = SKIP, description = SKIP,
                   assigns_membership_id = SKIP, assigns_membership_name = SKIP,
                   sold_online = SKIP, contract_items = SKIP,
                   intro_offer = SKIP, autopay_schedule = SKIP,
                   number_of_autopays = SKIP, autopay_trigger_type = SKIP,
                   action_upon_completion_of_autopays = SKIP,
                   clients_charged_on = SKIP,
                   clients_charged_on_specific_date = SKIP,
                   discount_amount = SKIP, deposit_amount = SKIP,
                   first_autopay_free = SKIP, last_autopay_free = SKIP,
                   client_terminate_online = SKIP,
                   membership_type_restrictions = SKIP,
                   location_purchase_restriction_ids = SKIP,
                   location_purchase_restriction_names = SKIP,
                   agreement_terms = SKIP,
                   requires_electronic_confirmation = SKIP,
                   autopay_enabled = SKIP, first_payment_amount_subtotal = SKIP,
                   first_payment_amount_tax = SKIP,
                   first_payment_amount_total = SKIP,
                   recurring_payment_amount_subtotal = SKIP,
                   recurring_payment_amount_tax = SKIP,
                   recurring_payment_amount_total = SKIP,
                   total_contract_amount_subtotal = SKIP,
                   total_contract_amount_tax = SKIP,
                   total_contract_amount_total = SKIP,
                   promo_payment_amount_subtotal = SKIP,
                   promo_payment_amount_tax = SKIP,
                   promo_payment_amount_total = SKIP,
                   number_of_promo_autopays = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @description = description unless description == SKIP
      @assigns_membership_id = assigns_membership_id unless assigns_membership_id == SKIP
      @assigns_membership_name = assigns_membership_name unless assigns_membership_name == SKIP
      @sold_online = sold_online unless sold_online == SKIP
      @contract_items = contract_items unless contract_items == SKIP
      @intro_offer = intro_offer unless intro_offer == SKIP
      @autopay_schedule = autopay_schedule unless autopay_schedule == SKIP
      @number_of_autopays = number_of_autopays unless number_of_autopays == SKIP
      @autopay_trigger_type = autopay_trigger_type unless autopay_trigger_type == SKIP
      unless action_upon_completion_of_autopays == SKIP
        @action_upon_completion_of_autopays =
          action_upon_completion_of_autopays
      end
      @clients_charged_on = clients_charged_on unless clients_charged_on == SKIP
      unless clients_charged_on_specific_date == SKIP
        @clients_charged_on_specific_date =
          clients_charged_on_specific_date
      end
      @discount_amount = discount_amount unless discount_amount == SKIP
      @deposit_amount = deposit_amount unless deposit_amount == SKIP
      @first_autopay_free = first_autopay_free unless first_autopay_free == SKIP
      @last_autopay_free = last_autopay_free unless last_autopay_free == SKIP
      @client_terminate_online = client_terminate_online unless client_terminate_online == SKIP
      unless membership_type_restrictions == SKIP
        @membership_type_restrictions =
          membership_type_restrictions
      end
      unless location_purchase_restriction_ids == SKIP
        @location_purchase_restriction_ids =
          location_purchase_restriction_ids
      end
      unless location_purchase_restriction_names == SKIP
        @location_purchase_restriction_names =
          location_purchase_restriction_names
      end
      @agreement_terms = agreement_terms unless agreement_terms == SKIP
      unless requires_electronic_confirmation == SKIP
        @requires_electronic_confirmation =
          requires_electronic_confirmation
      end
      @autopay_enabled = autopay_enabled unless autopay_enabled == SKIP
      unless first_payment_amount_subtotal == SKIP
        @first_payment_amount_subtotal =
          first_payment_amount_subtotal
      end
      @first_payment_amount_tax = first_payment_amount_tax unless first_payment_amount_tax == SKIP
      unless first_payment_amount_total == SKIP
        @first_payment_amount_total =
          first_payment_amount_total
      end
      unless recurring_payment_amount_subtotal == SKIP
        @recurring_payment_amount_subtotal =
          recurring_payment_amount_subtotal
      end
      unless recurring_payment_amount_tax == SKIP
        @recurring_payment_amount_tax =
          recurring_payment_amount_tax
      end
      unless recurring_payment_amount_total == SKIP
        @recurring_payment_amount_total =
          recurring_payment_amount_total
      end
      unless total_contract_amount_subtotal == SKIP
        @total_contract_amount_subtotal =
          total_contract_amount_subtotal
      end
      unless total_contract_amount_tax == SKIP
        @total_contract_amount_tax =
          total_contract_amount_tax
      end
      unless total_contract_amount_total == SKIP
        @total_contract_amount_total =
          total_contract_amount_total
      end
      unless promo_payment_amount_subtotal == SKIP
        @promo_payment_amount_subtotal =
          promo_payment_amount_subtotal
      end
      @promo_payment_amount_tax = promo_payment_amount_tax unless promo_payment_amount_tax == SKIP
      unless promo_payment_amount_total == SKIP
        @promo_payment_amount_total =
          promo_payment_amount_total
      end
      @number_of_promo_autopays = number_of_promo_autopays unless number_of_promo_autopays == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      description = hash.key?('Description') ? hash['Description'] : SKIP
      assigns_membership_id =
        hash.key?('AssignsMembershipId') ? hash['AssignsMembershipId'] : SKIP
      assigns_membership_name =
        hash.key?('AssignsMembershipName') ? hash['AssignsMembershipName'] : SKIP
      sold_online = hash.key?('SoldOnline') ? hash['SoldOnline'] : SKIP
      # Parameter is an array, so we need to iterate through it
      contract_items = nil
      unless hash['ContractItems'].nil?
        contract_items = []
        hash['ContractItems'].each do |structure|
          contract_items << (ContractItem.from_hash(structure) if structure)
        end
      end

      contract_items = SKIP unless hash.key?('ContractItems')
      intro_offer = hash.key?('IntroOffer') ? hash['IntroOffer'] : SKIP
      autopay_schedule = AutopaySchedule.from_hash(hash['AutopaySchedule']) if
        hash['AutopaySchedule']
      number_of_autopays =
        hash.key?('NumberOfAutopays') ? hash['NumberOfAutopays'] : SKIP
      autopay_trigger_type =
        hash.key?('AutopayTriggerType') ? hash['AutopayTriggerType'] : SKIP
      action_upon_completion_of_autopays =
        hash.key?('ActionUponCompletionOfAutopays') ? hash['ActionUponCompletionOfAutopays'] : SKIP
      clients_charged_on =
        hash.key?('ClientsChargedOn') ? hash['ClientsChargedOn'] : SKIP
      clients_charged_on_specific_date = if hash.key?('ClientsChargedOnSpecificDate')
                                           (DateTimeHelper.from_rfc3339(hash['ClientsChargedOnSpecificDate']) if hash['ClientsChargedOnSpecificDate'])
                                         else
                                           SKIP
                                         end
      discount_amount =
        hash.key?('DiscountAmount') ? hash['DiscountAmount'] : SKIP
      deposit_amount = hash.key?('DepositAmount') ? hash['DepositAmount'] : SKIP
      first_autopay_free =
        hash.key?('FirstAutopayFree') ? hash['FirstAutopayFree'] : SKIP
      last_autopay_free =
        hash.key?('LastAutopayFree') ? hash['LastAutopayFree'] : SKIP
      client_terminate_online =
        hash.key?('ClientTerminateOnline') ? hash['ClientTerminateOnline'] : SKIP
      # Parameter is an array, so we need to iterate through it
      membership_type_restrictions = nil
      unless hash['MembershipTypeRestrictions'].nil?
        membership_type_restrictions = []
        hash['MembershipTypeRestrictions'].each do |structure|
          membership_type_restrictions << (MembershipTypeRestriction.from_hash(structure) if structure)
        end
      end

      membership_type_restrictions = SKIP unless hash.key?('MembershipTypeRestrictions')
      location_purchase_restriction_ids =
        hash.key?('LocationPurchaseRestrictionIds') ? hash['LocationPurchaseRestrictionIds'] : SKIP
      location_purchase_restriction_names =
        hash.key?('LocationPurchaseRestrictionNames') ? hash['LocationPurchaseRestrictionNames'] : SKIP
      agreement_terms =
        hash.key?('AgreementTerms') ? hash['AgreementTerms'] : SKIP
      requires_electronic_confirmation =
        hash.key?('RequiresElectronicConfirmation') ? hash['RequiresElectronicConfirmation'] : SKIP
      autopay_enabled =
        hash.key?('AutopayEnabled') ? hash['AutopayEnabled'] : SKIP
      first_payment_amount_subtotal =
        hash.key?('FirstPaymentAmountSubtotal') ? hash['FirstPaymentAmountSubtotal'] : SKIP
      first_payment_amount_tax =
        hash.key?('FirstPaymentAmountTax') ? hash['FirstPaymentAmountTax'] : SKIP
      first_payment_amount_total =
        hash.key?('FirstPaymentAmountTotal') ? hash['FirstPaymentAmountTotal'] : SKIP
      recurring_payment_amount_subtotal =
        hash.key?('RecurringPaymentAmountSubtotal') ? hash['RecurringPaymentAmountSubtotal'] : SKIP
      recurring_payment_amount_tax =
        hash.key?('RecurringPaymentAmountTax') ? hash['RecurringPaymentAmountTax'] : SKIP
      recurring_payment_amount_total =
        hash.key?('RecurringPaymentAmountTotal') ? hash['RecurringPaymentAmountTotal'] : SKIP
      total_contract_amount_subtotal =
        hash.key?('TotalContractAmountSubtotal') ? hash['TotalContractAmountSubtotal'] : SKIP
      total_contract_amount_tax =
        hash.key?('TotalContractAmountTax') ? hash['TotalContractAmountTax'] : SKIP
      total_contract_amount_total =
        hash.key?('TotalContractAmountTotal') ? hash['TotalContractAmountTotal'] : SKIP
      promo_payment_amount_subtotal =
        hash.key?('PromoPaymentAmountSubtotal') ? hash['PromoPaymentAmountSubtotal'] : SKIP
      promo_payment_amount_tax =
        hash.key?('PromoPaymentAmountTax') ? hash['PromoPaymentAmountTax'] : SKIP
      promo_payment_amount_total =
        hash.key?('PromoPaymentAmountTotal') ? hash['PromoPaymentAmountTotal'] : SKIP
      number_of_promo_autopays =
        hash.key?('NumberOfPromoAutopays') ? hash['NumberOfPromoAutopays'] : SKIP

      # Create object from extracted values.
      Contract.new(id,
                   name,
                   description,
                   assigns_membership_id,
                   assigns_membership_name,
                   sold_online,
                   contract_items,
                   intro_offer,
                   autopay_schedule,
                   number_of_autopays,
                   autopay_trigger_type,
                   action_upon_completion_of_autopays,
                   clients_charged_on,
                   clients_charged_on_specific_date,
                   discount_amount,
                   deposit_amount,
                   first_autopay_free,
                   last_autopay_free,
                   client_terminate_online,
                   membership_type_restrictions,
                   location_purchase_restriction_ids,
                   location_purchase_restriction_names,
                   agreement_terms,
                   requires_electronic_confirmation,
                   autopay_enabled,
                   first_payment_amount_subtotal,
                   first_payment_amount_tax,
                   first_payment_amount_total,
                   recurring_payment_amount_subtotal,
                   recurring_payment_amount_tax,
                   recurring_payment_amount_total,
                   total_contract_amount_subtotal,
                   total_contract_amount_tax,
                   total_contract_amount_total,
                   promo_payment_amount_subtotal,
                   promo_payment_amount_tax,
                   promo_payment_amount_total,
                   number_of_promo_autopays)
    end

    def to_custom_clients_charged_on_specific_date
      DateTimeHelper.to_rfc3339(clients_charged_on_specific_date)
    end
  end
end
