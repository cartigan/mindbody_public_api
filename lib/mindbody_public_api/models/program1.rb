# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Program1 Model.
  class Program1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :cancel_offset

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [ScheduleType2Enum]
    attr_accessor :schedule_type

    # TODO: Write general description for this method
    # @return [ContentFormatEnum]
    attr_accessor :content_format

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :online_booking_disabled

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :schedule_offset

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :schedule_offset_end

    # TODO: Write general description for this method
    # @return [PricingRelationships]
    attr_accessor :pricing_relationships

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['cancel_offset'] = 'CancelOffset'
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['schedule_type'] = 'ScheduleType'
      @_hash['content_format'] = 'ContentFormat'
      @_hash['online_booking_disabled'] = 'OnlineBookingDisabled'
      @_hash['schedule_offset'] = 'ScheduleOffset'
      @_hash['schedule_offset_end'] = 'ScheduleOffsetEnd'
      @_hash['pricing_relationships'] = 'PricingRelationships'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        cancel_offset
        id
        name
        schedule_type
        content_format
        online_booking_disabled
        schedule_offset
        schedule_offset_end
        pricing_relationships
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(cancel_offset = SKIP, id = SKIP, name = SKIP,
                   schedule_type = SKIP, content_format = SKIP,
                   online_booking_disabled = SKIP, schedule_offset = SKIP,
                   schedule_offset_end = SKIP, pricing_relationships = SKIP)
      @cancel_offset = cancel_offset unless cancel_offset == SKIP
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @schedule_type = schedule_type unless schedule_type == SKIP
      @content_format = content_format unless content_format == SKIP
      @online_booking_disabled = online_booking_disabled unless online_booking_disabled == SKIP
      @schedule_offset = schedule_offset unless schedule_offset == SKIP
      @schedule_offset_end = schedule_offset_end unless schedule_offset_end == SKIP
      @pricing_relationships = pricing_relationships unless pricing_relationships == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      cancel_offset = hash.key?('CancelOffset') ? hash['CancelOffset'] : SKIP
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      schedule_type = hash.key?('ScheduleType') ? hash['ScheduleType'] : SKIP
      content_format = hash.key?('ContentFormat') ? hash['ContentFormat'] : SKIP
      online_booking_disabled =
        hash.key?('OnlineBookingDisabled') ? hash['OnlineBookingDisabled'] : SKIP
      schedule_offset =
        hash.key?('ScheduleOffset') ? hash['ScheduleOffset'] : SKIP
      schedule_offset_end =
        hash.key?('ScheduleOffsetEnd') ? hash['ScheduleOffsetEnd'] : SKIP
      pricing_relationships = PricingRelationships.from_hash(hash['PricingRelationships']) if
        hash['PricingRelationships']

      # Create object from extracted values.
      Program1.new(cancel_offset,
                   id,
                   name,
                   schedule_type,
                   content_format,
                   online_booking_disabled,
                   schedule_offset,
                   schedule_offset_end,
                   pricing_relationships)
    end
  end
end
