# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # A client credit card.
  class ClientCreditCard < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The billing address for the credit card.
    # @return [String]
    attr_accessor :address

    # The name of the card holder.
    # @return [String]
    attr_accessor :card_holder

    # The credit card number.
    # @return [String]
    attr_accessor :card_number

    # The type of credit card, for example Visa or MasterCard.
    # @return [String]
    attr_accessor :card_type

    # The city in which the billing address is located.
    # @return [String]
    attr_accessor :city

    # The month in which the credit card expires.
    # @return [String]
    attr_accessor :exp_month

    # The year in which the credit card expires.
    # @return [String]
    attr_accessor :exp_year

    # The last four digits of the credit card number.
    # @return [String]
    attr_accessor :last_four

    # The postal code where the billing address is located.
    # @return [String]
    attr_accessor :postal_code

    # The state that the billing address is located in.
    # @return [String]
    attr_accessor :state

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['address'] = 'Address'
      @_hash['card_holder'] = 'CardHolder'
      @_hash['card_number'] = 'CardNumber'
      @_hash['card_type'] = 'CardType'
      @_hash['city'] = 'City'
      @_hash['exp_month'] = 'ExpMonth'
      @_hash['exp_year'] = 'ExpYear'
      @_hash['last_four'] = 'LastFour'
      @_hash['postal_code'] = 'PostalCode'
      @_hash['state'] = 'State'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        address
        card_holder
        card_number
        card_type
        city
        exp_month
        exp_year
        last_four
        postal_code
        state
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(address = SKIP, card_holder = SKIP, card_number = SKIP,
                   card_type = SKIP, city = SKIP, exp_month = SKIP,
                   exp_year = SKIP, last_four = SKIP, postal_code = SKIP,
                   state = SKIP)
      @address = address unless address == SKIP
      @card_holder = card_holder unless card_holder == SKIP
      @card_number = card_number unless card_number == SKIP
      @card_type = card_type unless card_type == SKIP
      @city = city unless city == SKIP
      @exp_month = exp_month unless exp_month == SKIP
      @exp_year = exp_year unless exp_year == SKIP
      @last_four = last_four unless last_four == SKIP
      @postal_code = postal_code unless postal_code == SKIP
      @state = state unless state == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      address = hash.key?('Address') ? hash['Address'] : SKIP
      card_holder = hash.key?('CardHolder') ? hash['CardHolder'] : SKIP
      card_number = hash.key?('CardNumber') ? hash['CardNumber'] : SKIP
      card_type = hash.key?('CardType') ? hash['CardType'] : SKIP
      city = hash.key?('City') ? hash['City'] : SKIP
      exp_month = hash.key?('ExpMonth') ? hash['ExpMonth'] : SKIP
      exp_year = hash.key?('ExpYear') ? hash['ExpYear'] : SKIP
      last_four = hash.key?('LastFour') ? hash['LastFour'] : SKIP
      postal_code = hash.key?('PostalCode') ? hash['PostalCode'] : SKIP
      state = hash.key?('State') ? hash['State'] : SKIP

      # Create object from extracted values.
      ClientCreditCard.new(address,
                           card_holder,
                           card_number,
                           card_type,
                           city,
                           exp_month,
                           exp_year,
                           last_four,
                           postal_code,
                           state)
    end
  end
end
