# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Contains information about any payment processing failure.  Specifically for
  # when an SCA challenge is
  class PaymentProcessingFailure < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Returned only if SCA challenge is indicated.
    # @return [String]
    attr_accessor :type

    # Returned only if SCA challenge is indicated.
    # @return [String]
    attr_accessor :message

    # Returned only if SCA challenge is indicated.
    # @return [String]
    attr_accessor :authentication_redirect_url

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'Type'
      @_hash['message'] = 'Message'
      @_hash['authentication_redirect_url'] = 'AuthenticationRedirectUrl'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        type
        message
        authentication_redirect_url
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(type = SKIP, message = SKIP,
                   authentication_redirect_url = SKIP)
      @type = type unless type == SKIP
      @message = message unless message == SKIP
      unless authentication_redirect_url == SKIP
        @authentication_redirect_url =
          authentication_redirect_url
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('Type') ? hash['Type'] : SKIP
      message = hash.key?('Message') ? hash['Message'] : SKIP
      authentication_redirect_url =
        hash.key?('AuthenticationRedirectUrl') ? hash['AuthenticationRedirectUrl'] : SKIP

      # Create object from extracted values.
      PaymentProcessingFailure.new(type,
                                   message,
                                   authentication_redirect_url)
    end
  end
end
