# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module MindbodyPublicApi
  # GetAvailableDatesResponse Model.
  class GetAvailableDatesResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A list of dates where scheduled appointment availability was found after
    # applying request filters.
    # @return [Array[DateTime]]
    attr_accessor :available_dates

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['available_dates'] = 'AvailableDates'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        available_dates
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(available_dates = SKIP)
      @available_dates = available_dates unless available_dates == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      available_dates = nil
      unless hash['AvailableDates'].nil?
        available_dates = []
        hash['AvailableDates'].each do |datetime_string|
          available_dates << (DateTimeHelper.from_rfc3339(datetime_string) if datetime_string)
        end
      end

      available_dates = SKIP unless hash.key?('AvailableDates')

      # Create object from extracted values.
      GetAvailableDatesResponse.new(available_dates)
    end

    def to_custom_available_dates(hash, key)
      DateTimeHelper.to_rfc3339_array(available_dates, hash, key)
    end
  end
end
