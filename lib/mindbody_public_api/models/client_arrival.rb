# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # ClientArrival Model.
  class ClientArrival < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Arrival program id
    # @return [Integer]
    attr_accessor :arrival_program_id

    # Arrival program name
    # @return [String]
    attr_accessor :arrival_program_name

    # Property to check client can access arrival service.
    # @return [TrueClass | FalseClass]
    attr_accessor :can_access

    # List of locations where arrival service can availed
    # @return [Array[Integer]]
    attr_accessor :locations_i_ds

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['arrival_program_id'] = 'ArrivalProgramID'
      @_hash['arrival_program_name'] = 'ArrivalProgramName'
      @_hash['can_access'] = 'CanAccess'
      @_hash['locations_i_ds'] = 'LocationsIDs'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        arrival_program_id
        arrival_program_name
        can_access
        locations_i_ds
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(arrival_program_id = SKIP, arrival_program_name = SKIP,
                   can_access = SKIP, locations_i_ds = SKIP)
      @arrival_program_id = arrival_program_id unless arrival_program_id == SKIP
      @arrival_program_name = arrival_program_name unless arrival_program_name == SKIP
      @can_access = can_access unless can_access == SKIP
      @locations_i_ds = locations_i_ds unless locations_i_ds == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      arrival_program_id =
        hash.key?('ArrivalProgramID') ? hash['ArrivalProgramID'] : SKIP
      arrival_program_name =
        hash.key?('ArrivalProgramName') ? hash['ArrivalProgramName'] : SKIP
      can_access = hash.key?('CanAccess') ? hash['CanAccess'] : SKIP
      locations_i_ds = hash.key?('LocationsIDs') ? hash['LocationsIDs'] : SKIP

      # Create object from extracted values.
      ClientArrival.new(arrival_program_id,
                        arrival_program_name,
                        can_access,
                        locations_i_ds)
    end
  end
end
