# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # SubCategory Model.
  class SubCategory < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The Id of the subcategory.
    # @return [Integer]
    attr_accessor :id

    # The name of the subcategory.
    # @return [String]
    attr_accessor :sub_category_name

    # When `true`, indicates that the subcategory is active.
    # @return [TrueClass | FalseClass]
    attr_accessor :active

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'Id'
      @_hash['sub_category_name'] = 'SubCategoryName'
      @_hash['active'] = 'Active'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        sub_category_name
        active
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, sub_category_name = SKIP, active = SKIP)
      @id = id unless id == SKIP
      @sub_category_name = sub_category_name unless sub_category_name == SKIP
      @active = active unless active == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('Id') ? hash['Id'] : SKIP
      sub_category_name =
        hash.key?('SubCategoryName') ? hash['SubCategoryName'] : SKIP
      active = hash.key?('Active') ? hash['Active'] : SKIP

      # Create object from extracted values.
      SubCategory.new(id,
                      sub_category_name,
                      active)
    end
  end
end
