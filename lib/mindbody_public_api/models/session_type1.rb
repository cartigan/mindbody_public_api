# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # SessionType1 Model.
  class SessionType1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Type1Enum]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :default_time_length

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :staff_time_length

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :program_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :num_deducted

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :active

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :capacity

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :resource_required

    # ServiceTag refers to Category and Subcategory fields for classes and
    # appointments
    # @return [ServiceTag]
    attr_accessor :category

    # ServiceTag refers to Category and Subcategory fields for classes and
    # appointments
    # @return [ServiceTag]
    attr_accessor :subcategory

    # ServiceTag refers to Category and Subcategory fields for classes and
    # appointments
    # @return [String]
    attr_accessor :online_description

    # ServiceTag refers to Category and Subcategory fields for classes and
    # appointments
    # @return [TrueClass | FalseClass]
    attr_accessor :available_for_add_on

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'Type'
      @_hash['default_time_length'] = 'DefaultTimeLength'
      @_hash['staff_time_length'] = 'StaffTimeLength'
      @_hash['program_id'] = 'ProgramId'
      @_hash['num_deducted'] = 'NumDeducted'
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['active'] = 'Active'
      @_hash['capacity'] = 'Capacity'
      @_hash['resource_required'] = 'ResourceRequired'
      @_hash['category'] = 'Category'
      @_hash['subcategory'] = 'Subcategory'
      @_hash['online_description'] = 'OnlineDescription'
      @_hash['available_for_add_on'] = 'AvailableForAddOn'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        type
        default_time_length
        staff_time_length
        program_id
        num_deducted
        id
        name
        active
        capacity
        resource_required
        category
        subcategory
        online_description
        available_for_add_on
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(type = SKIP, default_time_length = SKIP,
                   staff_time_length = SKIP, program_id = SKIP,
                   num_deducted = SKIP, id = SKIP, name = SKIP, active = SKIP,
                   capacity = SKIP, resource_required = SKIP, category = SKIP,
                   subcategory = SKIP, online_description = SKIP,
                   available_for_add_on = SKIP)
      @type = type unless type == SKIP
      @default_time_length = default_time_length unless default_time_length == SKIP
      @staff_time_length = staff_time_length unless staff_time_length == SKIP
      @program_id = program_id unless program_id == SKIP
      @num_deducted = num_deducted unless num_deducted == SKIP
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @active = active unless active == SKIP
      @capacity = capacity unless capacity == SKIP
      @resource_required = resource_required unless resource_required == SKIP
      @category = category unless category == SKIP
      @subcategory = subcategory unless subcategory == SKIP
      @online_description = online_description unless online_description == SKIP
      @available_for_add_on = available_for_add_on unless available_for_add_on == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('Type') ? hash['Type'] : SKIP
      default_time_length =
        hash.key?('DefaultTimeLength') ? hash['DefaultTimeLength'] : SKIP
      staff_time_length =
        hash.key?('StaffTimeLength') ? hash['StaffTimeLength'] : SKIP
      program_id = hash.key?('ProgramId') ? hash['ProgramId'] : SKIP
      num_deducted = hash.key?('NumDeducted') ? hash['NumDeducted'] : SKIP
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      active = hash.key?('Active') ? hash['Active'] : SKIP
      capacity = hash.key?('Capacity') ? hash['Capacity'] : SKIP
      resource_required =
        hash.key?('ResourceRequired') ? hash['ResourceRequired'] : SKIP
      category = ServiceTag.from_hash(hash['Category']) if hash['Category']
      subcategory = ServiceTag.from_hash(hash['Subcategory']) if hash['Subcategory']
      online_description =
        hash.key?('OnlineDescription') ? hash['OnlineDescription'] : SKIP
      available_for_add_on =
        hash.key?('AvailableForAddOn') ? hash['AvailableForAddOn'] : SKIP

      # Create object from extracted values.
      SessionType1.new(type,
                       default_time_length,
                       staff_time_length,
                       program_id,
                       num_deducted,
                       id,
                       name,
                       active,
                       capacity,
                       resource_required,
                       category,
                       subcategory,
                       online_description,
                       available_for_add_on)
    end
  end
end
