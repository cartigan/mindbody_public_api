# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # AddSiteClientIndexResponse Model.
  class AddSiteClientIndexResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # ID of the client index.
    # @return [Integer]
    attr_accessor :client_index_id

    # The name of the client index.
    # @return [String]
    attr_accessor :client_index_name

    # Indicates if Client Index is Active
    # @return [TrueClass | FalseClass]
    attr_accessor :active

    # Indicates if Client Index is shown on a new client profile
    # @return [TrueClass | FalseClass]
    attr_accessor :show_on_new_client

    # Indicates if Client Index is shown on Enrollement Roster
    # @return [TrueClass | FalseClass]
    attr_accessor :show_on_enrollment_roster

    # Indicates if Client Index can be edited on Enrollement Roster
    # @return [TrueClass | FalseClass]
    attr_accessor :edit_on_enrollment_roster

    # Indicates sort order
    # @return [Integer]
    attr_accessor :sort_order

    # Indicates if Client Index is shown in consumer mode.
    # @return [TrueClass | FalseClass]
    attr_accessor :show_in_consumer_mode

    # Indicates if the index is required when creating profiles in consumer
    # mode.
    # @return [TrueClass | FalseClass]
    attr_accessor :required_consumer_mode

    # Indicates if the index is required when creating profiles in business
    # mode.
    # @return [TrueClass | FalseClass]
    attr_accessor :required_biz_mode

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['client_index_id'] = 'ClientIndexID'
      @_hash['client_index_name'] = 'ClientIndexName'
      @_hash['active'] = 'Active'
      @_hash['show_on_new_client'] = 'ShowOnNewClient'
      @_hash['show_on_enrollment_roster'] = 'ShowOnEnrollmentRoster'
      @_hash['edit_on_enrollment_roster'] = 'EditOnEnrollmentRoster'
      @_hash['sort_order'] = 'SortOrder'
      @_hash['show_in_consumer_mode'] = 'ShowInConsumerMode'
      @_hash['required_consumer_mode'] = 'RequiredConsumerMode'
      @_hash['required_biz_mode'] = 'RequiredBizMode'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        client_index_id
        client_index_name
        active
        show_on_new_client
        show_on_enrollment_roster
        edit_on_enrollment_roster
        sort_order
        show_in_consumer_mode
        required_consumer_mode
        required_biz_mode
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(client_index_id = SKIP, client_index_name = SKIP,
                   active = SKIP, show_on_new_client = SKIP,
                   show_on_enrollment_roster = SKIP,
                   edit_on_enrollment_roster = SKIP, sort_order = SKIP,
                   show_in_consumer_mode = SKIP, required_consumer_mode = SKIP,
                   required_biz_mode = SKIP)
      @client_index_id = client_index_id unless client_index_id == SKIP
      @client_index_name = client_index_name unless client_index_name == SKIP
      @active = active unless active == SKIP
      @show_on_new_client = show_on_new_client unless show_on_new_client == SKIP
      unless show_on_enrollment_roster == SKIP
        @show_on_enrollment_roster =
          show_on_enrollment_roster
      end
      unless edit_on_enrollment_roster == SKIP
        @edit_on_enrollment_roster =
          edit_on_enrollment_roster
      end
      @sort_order = sort_order unless sort_order == SKIP
      @show_in_consumer_mode = show_in_consumer_mode unless show_in_consumer_mode == SKIP
      @required_consumer_mode = required_consumer_mode unless required_consumer_mode == SKIP
      @required_biz_mode = required_biz_mode unless required_biz_mode == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      client_index_id =
        hash.key?('ClientIndexID') ? hash['ClientIndexID'] : SKIP
      client_index_name =
        hash.key?('ClientIndexName') ? hash['ClientIndexName'] : SKIP
      active = hash.key?('Active') ? hash['Active'] : SKIP
      show_on_new_client =
        hash.key?('ShowOnNewClient') ? hash['ShowOnNewClient'] : SKIP
      show_on_enrollment_roster =
        hash.key?('ShowOnEnrollmentRoster') ? hash['ShowOnEnrollmentRoster'] : SKIP
      edit_on_enrollment_roster =
        hash.key?('EditOnEnrollmentRoster') ? hash['EditOnEnrollmentRoster'] : SKIP
      sort_order = hash.key?('SortOrder') ? hash['SortOrder'] : SKIP
      show_in_consumer_mode =
        hash.key?('ShowInConsumerMode') ? hash['ShowInConsumerMode'] : SKIP
      required_consumer_mode =
        hash.key?('RequiredConsumerMode') ? hash['RequiredConsumerMode'] : SKIP
      required_biz_mode =
        hash.key?('RequiredBizMode') ? hash['RequiredBizMode'] : SKIP

      # Create object from extracted values.
      AddSiteClientIndexResponse.new(client_index_id,
                                     client_index_name,
                                     active,
                                     show_on_new_client,
                                     show_on_enrollment_roster,
                                     edit_on_enrollment_roster,
                                     sort_order,
                                     show_in_consumer_mode,
                                     required_consumer_mode,
                                     required_biz_mode)
    end
  end
end
