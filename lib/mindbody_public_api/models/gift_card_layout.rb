# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Gift card layout
  class GiftCardLayout < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The ID of the layout.
    # @return [Integer]
    attr_accessor :layout_id

    # The name of the layout.
    # @return [String]
    attr_accessor :layout_name

    # The URL of the layout.
    # @return [String]
    attr_accessor :layout_url

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['layout_id'] = 'LayoutId'
      @_hash['layout_name'] = 'LayoutName'
      @_hash['layout_url'] = 'LayoutUrl'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        layout_id
        layout_name
        layout_url
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(layout_id = SKIP, layout_name = SKIP, layout_url = SKIP)
      @layout_id = layout_id unless layout_id == SKIP
      @layout_name = layout_name unless layout_name == SKIP
      @layout_url = layout_url unless layout_url == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      layout_id = hash.key?('LayoutId') ? hash['LayoutId'] : SKIP
      layout_name = hash.key?('LayoutName') ? hash['LayoutName'] : SKIP
      layout_url = hash.key?('LayoutUrl') ? hash['LayoutUrl'] : SKIP

      # Create object from extracted values.
      GiftCardLayout.new(layout_id,
                         layout_name,
                         layout_url)
    end
  end
end
