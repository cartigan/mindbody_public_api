# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Contains information about the pagination to use.
  class PaginationResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Limit from pagination request
    # @return [Integer]
    attr_accessor :requested_limit

    # Offset from pagination request
    # @return [Integer]
    attr_accessor :requested_offset

    # Number of results returned in this response
    # @return [Integer]
    attr_accessor :page_size

    # Total number of results in dataset
    # @return [Integer]
    attr_accessor :total_results

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['requested_limit'] = 'RequestedLimit'
      @_hash['requested_offset'] = 'RequestedOffset'
      @_hash['page_size'] = 'PageSize'
      @_hash['total_results'] = 'TotalResults'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        requested_limit
        requested_offset
        page_size
        total_results
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(requested_limit = SKIP, requested_offset = SKIP,
                   page_size = SKIP, total_results = SKIP)
      @requested_limit = requested_limit unless requested_limit == SKIP
      @requested_offset = requested_offset unless requested_offset == SKIP
      @page_size = page_size unless page_size == SKIP
      @total_results = total_results unless total_results == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      requested_limit =
        hash.key?('RequestedLimit') ? hash['RequestedLimit'] : SKIP
      requested_offset =
        hash.key?('RequestedOffset') ? hash['RequestedOffset'] : SKIP
      page_size = hash.key?('PageSize') ? hash['PageSize'] : SKIP
      total_results = hash.key?('TotalResults') ? hash['TotalResults'] : SKIP

      # Create object from extracted values.
      PaginationResponse.new(requested_limit,
                             requested_offset,
                             page_size,
                             total_results)
    end
  end
end
