# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # LeadChannel Model.
  class LeadChannel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :salespipeline_id

    # TODO: Write general description for this method
    # @return [UUID | String]
    attr_accessor :universal_customer_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :studio_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['salespipeline_id'] = 'SalespipelineId'
      @_hash['universal_customer_id'] = 'UniversalCustomerId'
      @_hash['studio_id'] = 'StudioId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        salespipeline_id
        universal_customer_id
        studio_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, name = SKIP, salespipeline_id = SKIP,
                   universal_customer_id = SKIP, studio_id = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @salespipeline_id = salespipeline_id unless salespipeline_id == SKIP
      @universal_customer_id = universal_customer_id unless universal_customer_id == SKIP
      @studio_id = studio_id unless studio_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      salespipeline_id =
        hash.key?('SalespipelineId') ? hash['SalespipelineId'] : SKIP
      universal_customer_id =
        hash.key?('UniversalCustomerId') ? hash['UniversalCustomerId'] : SKIP
      studio_id = hash.key?('StudioId') ? hash['StudioId'] : SKIP

      # Create object from extracted values.
      LeadChannel.new(id,
                      name,
                      salespipeline_id,
                      universal_customer_id,
                      studio_id)
    end
  end
end
