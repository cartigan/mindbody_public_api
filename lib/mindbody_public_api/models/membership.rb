# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Membership Model.
  class Membership < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The membership id.
    # @return [Integer]
    attr_accessor :membership_id

    # The membership name.
    # @return [String]
    attr_accessor :membership_name

    # The priority/sort order.
    # @return [Integer]
    attr_accessor :priority

    # The membership discount for retail as a percentage.
    # @return [Float]
    attr_accessor :member_retail_discount

    # The membership discount for services as a percentage.
    # @return [Float]
    attr_accessor :member_service_discount

    # Allow clients in this membership to schedule unpaid.
    # @return [TrueClass | FalseClass]
    attr_accessor :allow_clients_to_schedule_unpaid

    # List of programs that are restricted to clients in this membership only.
    # @return [Array[ProgramMembership]]
    attr_accessor :online_booking_restricted_to_members_only

    # Day of month scheduling opens for next month.  Unrestricted is a null
    # value.
    # @return [Integer]
    attr_accessor :day_of_month_scheduling_opens_for_next_month

    # Restrict self sign in to members only.
    # @return [TrueClass | FalseClass]
    attr_accessor :restrict_self_sign_in_to_members_only

    # Allow members to book appointments without paying.
    # @return [TrueClass | FalseClass]
    attr_accessor :allow_members_to_book_appointments_without_paying

    # Allow members to purchase non-members services.
    # @return [TrueClass | FalseClass]
    attr_accessor :allow_members_to_purchase_non_members_services

    # Allow members to purchase non-members products.
    # @return [TrueClass | FalseClass]
    attr_accessor :allow_members_to_purchase_non_members_products

    # Indicates if the membership is active.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_active

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['membership_id'] = 'MembershipId'
      @_hash['membership_name'] = 'MembershipName'
      @_hash['priority'] = 'Priority'
      @_hash['member_retail_discount'] = 'MemberRetailDiscount'
      @_hash['member_service_discount'] = 'MemberServiceDiscount'
      @_hash['allow_clients_to_schedule_unpaid'] =
        'AllowClientsToScheduleUnpaid'
      @_hash['online_booking_restricted_to_members_only'] =
        'OnlineBookingRestrictedToMembersOnly'
      @_hash['day_of_month_scheduling_opens_for_next_month'] =
        'DayOfMonthSchedulingOpensForNextMonth'
      @_hash['restrict_self_sign_in_to_members_only'] =
        'RestrictSelfSignInToMembersOnly'
      @_hash['allow_members_to_book_appointments_without_paying'] =
        'AllowMembersToBookAppointmentsWithoutPaying'
      @_hash['allow_members_to_purchase_non_members_services'] =
        'AllowMembersToPurchaseNonMembersServices'
      @_hash['allow_members_to_purchase_non_members_products'] =
        'AllowMembersToPurchaseNonMembersProducts'
      @_hash['is_active'] = 'IsActive'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        membership_id
        membership_name
        priority
        member_retail_discount
        member_service_discount
        allow_clients_to_schedule_unpaid
        online_booking_restricted_to_members_only
        day_of_month_scheduling_opens_for_next_month
        restrict_self_sign_in_to_members_only
        allow_members_to_book_appointments_without_paying
        allow_members_to_purchase_non_members_services
        allow_members_to_purchase_non_members_products
        is_active
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(membership_id = SKIP, membership_name = SKIP,
                   priority = SKIP, member_retail_discount = SKIP,
                   member_service_discount = SKIP,
                   allow_clients_to_schedule_unpaid = SKIP,
                   online_booking_restricted_to_members_only = SKIP,
                   day_of_month_scheduling_opens_for_next_month = SKIP,
                   restrict_self_sign_in_to_members_only = SKIP,
                   allow_members_to_book_appointments_without_paying = SKIP,
                   allow_members_to_purchase_non_members_services = SKIP,
                   allow_members_to_purchase_non_members_products = SKIP,
                   is_active = SKIP)
      @membership_id = membership_id unless membership_id == SKIP
      @membership_name = membership_name unless membership_name == SKIP
      @priority = priority unless priority == SKIP
      @member_retail_discount = member_retail_discount unless member_retail_discount == SKIP
      @member_service_discount = member_service_discount unless member_service_discount == SKIP
      unless allow_clients_to_schedule_unpaid == SKIP
        @allow_clients_to_schedule_unpaid =
          allow_clients_to_schedule_unpaid
      end
      unless online_booking_restricted_to_members_only == SKIP
        @online_booking_restricted_to_members_only =
          online_booking_restricted_to_members_only
      end
      unless day_of_month_scheduling_opens_for_next_month == SKIP
        @day_of_month_scheduling_opens_for_next_month =
          day_of_month_scheduling_opens_for_next_month
      end
      unless restrict_self_sign_in_to_members_only == SKIP
        @restrict_self_sign_in_to_members_only =
          restrict_self_sign_in_to_members_only
      end
      unless allow_members_to_book_appointments_without_paying == SKIP
        @allow_members_to_book_appointments_without_paying =
          allow_members_to_book_appointments_without_paying
      end
      unless allow_members_to_purchase_non_members_services == SKIP
        @allow_members_to_purchase_non_members_services =
          allow_members_to_purchase_non_members_services
      end
      unless allow_members_to_purchase_non_members_products == SKIP
        @allow_members_to_purchase_non_members_products =
          allow_members_to_purchase_non_members_products
      end
      @is_active = is_active unless is_active == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      membership_id = hash.key?('MembershipId') ? hash['MembershipId'] : SKIP
      membership_name =
        hash.key?('MembershipName') ? hash['MembershipName'] : SKIP
      priority = hash.key?('Priority') ? hash['Priority'] : SKIP
      member_retail_discount =
        hash.key?('MemberRetailDiscount') ? hash['MemberRetailDiscount'] : SKIP
      member_service_discount =
        hash.key?('MemberServiceDiscount') ? hash['MemberServiceDiscount'] : SKIP
      allow_clients_to_schedule_unpaid =
        hash.key?('AllowClientsToScheduleUnpaid') ? hash['AllowClientsToScheduleUnpaid'] : SKIP
      # Parameter is an array, so we need to iterate through it
      online_booking_restricted_to_members_only = nil
      unless hash['OnlineBookingRestrictedToMembersOnly'].nil?
        online_booking_restricted_to_members_only = []
        hash['OnlineBookingRestrictedToMembersOnly'].each do |structure|
          online_booking_restricted_to_members_only << (ProgramMembership.from_hash(structure) if structure)
        end
      end

      online_booking_restricted_to_members_only = SKIP unless hash.key?('OnlineBookingRestrictedToMembersOnly')
      day_of_month_scheduling_opens_for_next_month =
        hash.key?('DayOfMonthSchedulingOpensForNextMonth') ? hash['DayOfMonthSchedulingOpensForNextMonth'] : SKIP
      restrict_self_sign_in_to_members_only =
        hash.key?('RestrictSelfSignInToMembersOnly') ? hash['RestrictSelfSignInToMembersOnly'] : SKIP
      allow_members_to_book_appointments_without_paying =
        hash.key?('AllowMembersToBookAppointmentsWithoutPaying') ? hash['AllowMembersToBookAppointmentsWithoutPaying'] : SKIP
      allow_members_to_purchase_non_members_services =
        hash.key?('AllowMembersToPurchaseNonMembersServices') ? hash['AllowMembersToPurchaseNonMembersServices'] : SKIP
      allow_members_to_purchase_non_members_products =
        hash.key?('AllowMembersToPurchaseNonMembersProducts') ? hash['AllowMembersToPurchaseNonMembersProducts'] : SKIP
      is_active = hash.key?('IsActive') ? hash['IsActive'] : SKIP

      # Create object from extracted values.
      Membership.new(membership_id,
                     membership_name,
                     priority,
                     member_retail_discount,
                     member_service_discount,
                     allow_clients_to_schedule_unpaid,
                     online_booking_restricted_to_members_only,
                     day_of_month_scheduling_opens_for_next_month,
                     restrict_self_sign_in_to_members_only,
                     allow_members_to_book_appointments_without_paying,
                     allow_members_to_purchase_non_members_services,
                     allow_members_to_purchase_non_members_products,
                     is_active)
    end
  end
end
