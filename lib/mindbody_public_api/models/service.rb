# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Service Model.
  class Service < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The cost of the pricing option when sold at a physical location.
    # @return [Float]
    attr_accessor :price

    # The cost of the pricing option when sold online.
    # @return [Float]
    attr_accessor :online_price

    # The amount of tax included in the price, if inclusive pricing is enabled.
    # @return [Float]
    attr_accessor :tax_included

    # The ID of the program that this pricing option applies to.
    # @return [Integer]
    attr_accessor :program_id

    # The tax rate applied to the pricing option. This field is populated only
    # when you include a `LocationID` in the request.
    # @return [Float]
    attr_accessor :tax_rate

    # The unique ID of this pricing option. This is the `PurchasedItems[].Id`
    # returned from GET Sales.
    # @return [Integer]
    attr_accessor :product_id

    # The barcode ID of the pricing option. This is the
    # `PurchasedItems[].BarcodeId` returned from GET Sales.
    # @return [String]
    attr_accessor :id

    # The name of the pricing option.
    # @return [String]
    attr_accessor :name

    # The initial count of usages available for the pricing option.
    # @return [Integer]
    attr_accessor :count

    # When true, filters to the pricing options that can be sold online.
    # Default: *false*
    # @return [TrueClass | FalseClass]
    attr_accessor :sell_online

    # When `true`, indicates that the pricing option is allowed to be purchased
    # in a contract or package.
    # When `false`, indicates that the pricing option is not allowed to be
    # purchased in a contract or package.
    # @return [TrueClass | FalseClass]
    attr_accessor :sale_in_contract_only

    # The type of the pricing option, either Drop-in, Series, or Unlimited.
    # @return [String]
    attr_accessor :type

    # The date the pricing option begins its activation, either the date of sale
    # or the date the client first used it for a visit.
    # @return [String]
    attr_accessor :expiration_type

    # The unit, either days or months, of `ExpirationLength`, indicating how
    # long the pricing option is active for.
    # @return [String]
    attr_accessor :expiration_unit

    # The number of days or months that the pricing option is active for.
    # @return [Integer]
    attr_accessor :expiration_length

    # The revenue category of the pricing option.
    # @return [String]
    attr_accessor :revenue_category

    # The ID that this pricing option grants membership to.
    # @return [Integer]
    attr_accessor :membership_id

    # The location IDs where this pricing option is sold.
    # @return [Array[Integer]]
    attr_accessor :sell_at_location_ids

    # The location IDs where this pricing option may be used.
    # @return [Array[Integer]]
    attr_accessor :use_at_location_ids

    # The priority of the pricing option, either High, Medium, or Low.
    # @return [String]
    attr_accessor :priority

    # Indicates if this pricing option is an introductory offer.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_intro_offer

    # When `IsIntroOffer` is true, this indicates if this introductory offer may
    # be purchased by new clients or new and existing clients.
    # @return [String]
    attr_accessor :intro_offer_type

    # Indicates whether this pricing option is sold at discounted rates by
    # third-party services, such as ClassPass.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_third_party_discount_pricing

    # The name of the service category the pricing option belongs to.
    # @return [String]
    attr_accessor :program

    # If the pricing option has been marked discontinued.
    # @return [TrueClass | FalseClass]
    attr_accessor :discontinued

    # Restricted to members of these membership ids.
    # @return [Array[Integer]]
    attr_accessor :restrict_to_membership_ids

    # Discounts applied of these membership ids.
    # @return [Array[Integer]]
    attr_accessor :apply_member_discounts_of_membership_ids

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['price'] = 'Price'
      @_hash['online_price'] = 'OnlinePrice'
      @_hash['tax_included'] = 'TaxIncluded'
      @_hash['program_id'] = 'ProgramId'
      @_hash['tax_rate'] = 'TaxRate'
      @_hash['product_id'] = 'ProductId'
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['count'] = 'Count'
      @_hash['sell_online'] = 'SellOnline'
      @_hash['sale_in_contract_only'] = 'SaleInContractOnly'
      @_hash['type'] = 'Type'
      @_hash['expiration_type'] = 'ExpirationType'
      @_hash['expiration_unit'] = 'ExpirationUnit'
      @_hash['expiration_length'] = 'ExpirationLength'
      @_hash['revenue_category'] = 'RevenueCategory'
      @_hash['membership_id'] = 'MembershipId'
      @_hash['sell_at_location_ids'] = 'SellAtLocationIds'
      @_hash['use_at_location_ids'] = 'UseAtLocationIds'
      @_hash['priority'] = 'Priority'
      @_hash['is_intro_offer'] = 'IsIntroOffer'
      @_hash['intro_offer_type'] = 'IntroOfferType'
      @_hash['is_third_party_discount_pricing'] =
        'IsThirdPartyDiscountPricing'
      @_hash['program'] = 'Program'
      @_hash['discontinued'] = 'Discontinued'
      @_hash['restrict_to_membership_ids'] = 'RestrictToMembershipIds'
      @_hash['apply_member_discounts_of_membership_ids'] =
        'ApplyMemberDiscountsOfMembershipIds'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        price
        online_price
        tax_included
        program_id
        tax_rate
        product_id
        id
        name
        count
        sell_online
        sale_in_contract_only
        type
        expiration_type
        expiration_unit
        expiration_length
        revenue_category
        membership_id
        sell_at_location_ids
        use_at_location_ids
        priority
        is_intro_offer
        intro_offer_type
        is_third_party_discount_pricing
        program
        discontinued
        restrict_to_membership_ids
        apply_member_discounts_of_membership_ids
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(price = SKIP, online_price = SKIP, tax_included = SKIP,
                   program_id = SKIP, tax_rate = SKIP, product_id = SKIP,
                   id = SKIP, name = SKIP, count = SKIP, sell_online = SKIP,
                   sale_in_contract_only = SKIP, type = SKIP,
                   expiration_type = SKIP, expiration_unit = SKIP,
                   expiration_length = SKIP, revenue_category = SKIP,
                   membership_id = SKIP, sell_at_location_ids = SKIP,
                   use_at_location_ids = SKIP, priority = SKIP,
                   is_intro_offer = SKIP, intro_offer_type = SKIP,
                   is_third_party_discount_pricing = SKIP, program = SKIP,
                   discontinued = SKIP, restrict_to_membership_ids = SKIP,
                   apply_member_discounts_of_membership_ids = SKIP)
      @price = price unless price == SKIP
      @online_price = online_price unless online_price == SKIP
      @tax_included = tax_included unless tax_included == SKIP
      @program_id = program_id unless program_id == SKIP
      @tax_rate = tax_rate unless tax_rate == SKIP
      @product_id = product_id unless product_id == SKIP
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @count = count unless count == SKIP
      @sell_online = sell_online unless sell_online == SKIP
      @sale_in_contract_only = sale_in_contract_only unless sale_in_contract_only == SKIP
      @type = type unless type == SKIP
      @expiration_type = expiration_type unless expiration_type == SKIP
      @expiration_unit = expiration_unit unless expiration_unit == SKIP
      @expiration_length = expiration_length unless expiration_length == SKIP
      @revenue_category = revenue_category unless revenue_category == SKIP
      @membership_id = membership_id unless membership_id == SKIP
      @sell_at_location_ids = sell_at_location_ids unless sell_at_location_ids == SKIP
      @use_at_location_ids = use_at_location_ids unless use_at_location_ids == SKIP
      @priority = priority unless priority == SKIP
      @is_intro_offer = is_intro_offer unless is_intro_offer == SKIP
      @intro_offer_type = intro_offer_type unless intro_offer_type == SKIP
      unless is_third_party_discount_pricing == SKIP
        @is_third_party_discount_pricing =
          is_third_party_discount_pricing
      end
      @program = program unless program == SKIP
      @discontinued = discontinued unless discontinued == SKIP
      unless restrict_to_membership_ids == SKIP
        @restrict_to_membership_ids =
          restrict_to_membership_ids
      end
      unless apply_member_discounts_of_membership_ids == SKIP
        @apply_member_discounts_of_membership_ids =
          apply_member_discounts_of_membership_ids
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      price = hash.key?('Price') ? hash['Price'] : SKIP
      online_price = hash.key?('OnlinePrice') ? hash['OnlinePrice'] : SKIP
      tax_included = hash.key?('TaxIncluded') ? hash['TaxIncluded'] : SKIP
      program_id = hash.key?('ProgramId') ? hash['ProgramId'] : SKIP
      tax_rate = hash.key?('TaxRate') ? hash['TaxRate'] : SKIP
      product_id = hash.key?('ProductId') ? hash['ProductId'] : SKIP
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      count = hash.key?('Count') ? hash['Count'] : SKIP
      sell_online = hash.key?('SellOnline') ? hash['SellOnline'] : SKIP
      sale_in_contract_only =
        hash.key?('SaleInContractOnly') ? hash['SaleInContractOnly'] : SKIP
      type = hash.key?('Type') ? hash['Type'] : SKIP
      expiration_type =
        hash.key?('ExpirationType') ? hash['ExpirationType'] : SKIP
      expiration_unit =
        hash.key?('ExpirationUnit') ? hash['ExpirationUnit'] : SKIP
      expiration_length =
        hash.key?('ExpirationLength') ? hash['ExpirationLength'] : SKIP
      revenue_category =
        hash.key?('RevenueCategory') ? hash['RevenueCategory'] : SKIP
      membership_id = hash.key?('MembershipId') ? hash['MembershipId'] : SKIP
      sell_at_location_ids =
        hash.key?('SellAtLocationIds') ? hash['SellAtLocationIds'] : SKIP
      use_at_location_ids =
        hash.key?('UseAtLocationIds') ? hash['UseAtLocationIds'] : SKIP
      priority = hash.key?('Priority') ? hash['Priority'] : SKIP
      is_intro_offer = hash.key?('IsIntroOffer') ? hash['IsIntroOffer'] : SKIP
      intro_offer_type =
        hash.key?('IntroOfferType') ? hash['IntroOfferType'] : SKIP
      is_third_party_discount_pricing =
        hash.key?('IsThirdPartyDiscountPricing') ? hash['IsThirdPartyDiscountPricing'] : SKIP
      program = hash.key?('Program') ? hash['Program'] : SKIP
      discontinued = hash.key?('Discontinued') ? hash['Discontinued'] : SKIP
      restrict_to_membership_ids =
        hash.key?('RestrictToMembershipIds') ? hash['RestrictToMembershipIds'] : SKIP
      apply_member_discounts_of_membership_ids =
        hash.key?('ApplyMemberDiscountsOfMembershipIds') ? hash['ApplyMemberDiscountsOfMembershipIds'] : SKIP

      # Create object from extracted values.
      Service.new(price,
                  online_price,
                  tax_included,
                  program_id,
                  tax_rate,
                  product_id,
                  id,
                  name,
                  count,
                  sell_online,
                  sale_in_contract_only,
                  type,
                  expiration_type,
                  expiration_unit,
                  expiration_length,
                  revenue_category,
                  membership_id,
                  sell_at_location_ids,
                  use_at_location_ids,
                  priority,
                  is_intro_offer,
                  intro_offer_type,
                  is_third_party_discount_pricing,
                  program,
                  discontinued,
                  restrict_to_membership_ids,
                  apply_member_discounts_of_membership_ids)
    end
  end
end
