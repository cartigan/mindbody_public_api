# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # AddOnSmall1 Model.
  class AddOnSmall1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The unique ID of the appointment add on.
    # @return [Integer]
    attr_accessor :id

    # The Name of the appointment add on.
    # @return [String]
    attr_accessor :name

    # The unique ID of the staff on appointment.
    # @return [Integer]
    attr_accessor :staff_id

    # The ID of the session type of this appointment.
    # @return [Integer]
    attr_accessor :type_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['staff_id'] = 'StaffId'
      @_hash['type_id'] = 'TypeId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        staff_id
        type_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, name = SKIP, staff_id = SKIP, type_id = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @staff_id = staff_id unless staff_id == SKIP
      @type_id = type_id unless type_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      staff_id = hash.key?('StaffId') ? hash['StaffId'] : SKIP
      type_id = hash.key?('TypeId') ? hash['TypeId'] : SKIP

      # Create object from extracted values.
      AddOnSmall1.new(id,
                      name,
                      staff_id,
                      type_id)
    end
  end
end
