# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # ContractItem Model.
  class ContractItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The ID of the item.
    # @return [String]
    attr_accessor :id

    # The name of the item.
    # @return [String]
    attr_accessor :name

    # A description of the item.
    # @return [String]
    attr_accessor :description

    # The type of the item.
    # @return [String]
    attr_accessor :type

    # The price of the item.
    # @return [Float]
    attr_accessor :price

    # The quantity of the item.
    # @return [Integer]
    attr_accessor :quantity

    # When `true`, indicates that the item is charged only once.<br />
    # When `false`, indicates that the item is charged multiple times.
    # @return [TrueClass | FalseClass]
    attr_accessor :one_time_item

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'Id'
      @_hash['name'] = 'Name'
      @_hash['description'] = 'Description'
      @_hash['type'] = 'Type'
      @_hash['price'] = 'Price'
      @_hash['quantity'] = 'Quantity'
      @_hash['one_time_item'] = 'OneTimeItem'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        description
        type
        price
        quantity
        one_time_item
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, name = SKIP, description = SKIP, type = SKIP,
                   price = SKIP, quantity = SKIP, one_time_item = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @description = description unless description == SKIP
      @type = type unless type == SKIP
      @price = price unless price == SKIP
      @quantity = quantity unless quantity == SKIP
      @one_time_item = one_time_item unless one_time_item == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('Id') ? hash['Id'] : SKIP
      name = hash.key?('Name') ? hash['Name'] : SKIP
      description = hash.key?('Description') ? hash['Description'] : SKIP
      type = hash.key?('Type') ? hash['Type'] : SKIP
      price = hash.key?('Price') ? hash['Price'] : SKIP
      quantity = hash.key?('Quantity') ? hash['Quantity'] : SKIP
      one_time_item = hash.key?('OneTimeItem') ? hash['OneTimeItem'] : SKIP

      # Create object from extracted values.
      ContractItem.new(id,
                       name,
                       description,
                       type,
                       price,
                       quantity,
                       one_time_item)
    end
  end
end
