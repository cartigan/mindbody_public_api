# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module MindbodyPublicApi
  # ProductsInventory Model.
  class ProductsInventory < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A ProductId of the product.
    # @return [Integer]
    attr_accessor :product_id

    # The Id is barcode Id of the product.
    # @return [String]
    attr_accessor :barcode_id

    # The LocationId of the product.
    # @return [Integer]
    attr_accessor :location_id

    # UnitsLogged of the product.
    # @return [Integer]
    attr_accessor :units_logged

    # UnitsSold of the product.
    # @return [Integer]
    attr_accessor :units_sold

    # The units in stock of the product
    # @return [Integer]
    attr_accessor :units_in_stock

    # ReorderLevel of the product.
    # @return [Integer]
    attr_accessor :reorder_level

    # MaxLevel of the product.
    # @return [Integer]
    attr_accessor :max_level

    # CreatedDateTimeUTC of the product.
    # @return [DateTime]
    attr_accessor :created_date_time_utc

    # ModifiedDateTimeUTC of the product.
    # @return [DateTime]
    attr_accessor :modified_date_time_utc

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['product_id'] = 'ProductId'
      @_hash['barcode_id'] = 'BarcodeId'
      @_hash['location_id'] = 'LocationId'
      @_hash['units_logged'] = 'UnitsLogged'
      @_hash['units_sold'] = 'UnitsSold'
      @_hash['units_in_stock'] = 'UnitsInStock'
      @_hash['reorder_level'] = 'ReorderLevel'
      @_hash['max_level'] = 'MaxLevel'
      @_hash['created_date_time_utc'] = 'CreatedDateTimeUTC'
      @_hash['modified_date_time_utc'] = 'ModifiedDateTimeUTC'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        product_id
        barcode_id
        location_id
        units_logged
        units_sold
        units_in_stock
        reorder_level
        max_level
        created_date_time_utc
        modified_date_time_utc
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(product_id = SKIP, barcode_id = SKIP, location_id = SKIP,
                   units_logged = SKIP, units_sold = SKIP,
                   units_in_stock = SKIP, reorder_level = SKIP,
                   max_level = SKIP, created_date_time_utc = SKIP,
                   modified_date_time_utc = SKIP)
      @product_id = product_id unless product_id == SKIP
      @barcode_id = barcode_id unless barcode_id == SKIP
      @location_id = location_id unless location_id == SKIP
      @units_logged = units_logged unless units_logged == SKIP
      @units_sold = units_sold unless units_sold == SKIP
      @units_in_stock = units_in_stock unless units_in_stock == SKIP
      @reorder_level = reorder_level unless reorder_level == SKIP
      @max_level = max_level unless max_level == SKIP
      @created_date_time_utc = created_date_time_utc unless created_date_time_utc == SKIP
      @modified_date_time_utc = modified_date_time_utc unless modified_date_time_utc == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      product_id = hash.key?('ProductId') ? hash['ProductId'] : SKIP
      barcode_id = hash.key?('BarcodeId') ? hash['BarcodeId'] : SKIP
      location_id = hash.key?('LocationId') ? hash['LocationId'] : SKIP
      units_logged = hash.key?('UnitsLogged') ? hash['UnitsLogged'] : SKIP
      units_sold = hash.key?('UnitsSold') ? hash['UnitsSold'] : SKIP
      units_in_stock = hash.key?('UnitsInStock') ? hash['UnitsInStock'] : SKIP
      reorder_level = hash.key?('ReorderLevel') ? hash['ReorderLevel'] : SKIP
      max_level = hash.key?('MaxLevel') ? hash['MaxLevel'] : SKIP
      created_date_time_utc = if hash.key?('CreatedDateTimeUTC')
                                (DateTimeHelper.from_rfc3339(hash['CreatedDateTimeUTC']) if hash['CreatedDateTimeUTC'])
                              else
                                SKIP
                              end
      modified_date_time_utc = if hash.key?('ModifiedDateTimeUTC')
                                 (DateTimeHelper.from_rfc3339(hash['ModifiedDateTimeUTC']) if hash['ModifiedDateTimeUTC'])
                               else
                                 SKIP
                               end

      # Create object from extracted values.
      ProductsInventory.new(product_id,
                            barcode_id,
                            location_id,
                            units_logged,
                            units_sold,
                            units_in_stock,
                            reorder_level,
                            max_level,
                            created_date_time_utc,
                            modified_date_time_utc)
    end

    def to_custom_created_date_time_utc
      DateTimeHelper.to_rfc3339(created_date_time_utc)
    end

    def to_custom_modified_date_time_utc
      DateTimeHelper.to_rfc3339(modified_date_time_utc)
    end
  end
end
