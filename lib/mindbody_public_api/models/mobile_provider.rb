# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # MobileProvider Model.
  class MobileProvider < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :active

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :provider_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :provider_address

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'Id'
      @_hash['active'] = 'Active'
      @_hash['provider_name'] = 'ProviderName'
      @_hash['provider_address'] = 'ProviderAddress'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        active
        provider_name
        provider_address
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, active = SKIP, provider_name = SKIP,
                   provider_address = SKIP)
      @id = id unless id == SKIP
      @active = active unless active == SKIP
      @provider_name = provider_name unless provider_name == SKIP
      @provider_address = provider_address unless provider_address == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('Id') ? hash['Id'] : SKIP
      active = hash.key?('Active') ? hash['Active'] : SKIP
      provider_name = hash.key?('ProviderName') ? hash['ProviderName'] : SKIP
      provider_address =
        hash.key?('ProviderAddress') ? hash['ProviderAddress'] : SKIP

      # Create object from extracted values.
      MobileProvider.new(id,
                         active,
                         provider_name,
                         provider_address)
    end
  end
end
