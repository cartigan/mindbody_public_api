# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Contains information about the requested client.
  class GetClientCompleteInfoResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A Client DTO with Suspension Informatoin
    # @return [ClientWithSuspensionInfo]
    attr_accessor :client

    # Contains information about client pricing options.
    # @return [Array[ClientService]]
    attr_accessor :client_services

    # Contains information about client contract.
    # @return [Array[ClientContract]]
    attr_accessor :client_contracts

    # Contains information about client Memberships.
    # @return [Array[ClientMembership]]
    attr_accessor :client_memberships

    # Contains information about client arrival services.
    # @return [Array[ClientArrival]]
    attr_accessor :client_arrivals

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['client'] = 'Client'
      @_hash['client_services'] = 'ClientServices'
      @_hash['client_contracts'] = 'ClientContracts'
      @_hash['client_memberships'] = 'ClientMemberships'
      @_hash['client_arrivals'] = 'ClientArrivals'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        client
        client_services
        client_contracts
        client_memberships
        client_arrivals
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(client = SKIP, client_services = SKIP,
                   client_contracts = SKIP, client_memberships = SKIP,
                   client_arrivals = SKIP)
      @client = client unless client == SKIP
      @client_services = client_services unless client_services == SKIP
      @client_contracts = client_contracts unless client_contracts == SKIP
      @client_memberships = client_memberships unless client_memberships == SKIP
      @client_arrivals = client_arrivals unless client_arrivals == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      client = ClientWithSuspensionInfo.from_hash(hash['Client']) if hash['Client']
      # Parameter is an array, so we need to iterate through it
      client_services = nil
      unless hash['ClientServices'].nil?
        client_services = []
        hash['ClientServices'].each do |structure|
          client_services << (ClientService.from_hash(structure) if structure)
        end
      end

      client_services = SKIP unless hash.key?('ClientServices')
      # Parameter is an array, so we need to iterate through it
      client_contracts = nil
      unless hash['ClientContracts'].nil?
        client_contracts = []
        hash['ClientContracts'].each do |structure|
          client_contracts << (ClientContract.from_hash(structure) if structure)
        end
      end

      client_contracts = SKIP unless hash.key?('ClientContracts')
      # Parameter is an array, so we need to iterate through it
      client_memberships = nil
      unless hash['ClientMemberships'].nil?
        client_memberships = []
        hash['ClientMemberships'].each do |structure|
          client_memberships << (ClientMembership.from_hash(structure) if structure)
        end
      end

      client_memberships = SKIP unless hash.key?('ClientMemberships')
      # Parameter is an array, so we need to iterate through it
      client_arrivals = nil
      unless hash['ClientArrivals'].nil?
        client_arrivals = []
        hash['ClientArrivals'].each do |structure|
          client_arrivals << (ClientArrival.from_hash(structure) if structure)
        end
      end

      client_arrivals = SKIP unless hash.key?('ClientArrivals')

      # Create object from extracted values.
      GetClientCompleteInfoResponse.new(client,
                                        client_services,
                                        client_contracts,
                                        client_memberships,
                                        client_arrivals)
    end
  end
end
