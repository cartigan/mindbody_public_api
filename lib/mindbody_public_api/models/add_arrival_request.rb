# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # AddArrivalRequest Model.
  class AddArrivalRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The ID of the requested client.
    # @return [String]
    attr_accessor :client_id

    # The ID of the location for the requested arrival.
    # @return [Integer]
    attr_accessor :location_id

    # The ID of the arrival program (service category) under which this arrival
    # is to be logged. If this is not provided, the program ID of the first
    # arrival pricing option found will be used.
    # OPTIONAL: will take first payment found if not provided
    # Default: **null**
    # @return [Integer]
    attr_accessor :arrival_type_id

    # The ID of the Lead Channel ID from lead management. If this is supplied
    # then it will map lead channel on the lead management.
    # If this is not supplied then it wont save anything.
    # This parameters required to track the lead channel if new client added
    # while adding arrival of client on non home location.
    # @return [Integer]
    attr_accessor :lead_channel_id

    # When `true`, indicates that the arrival log is to be validated, but no new
    # arrival data is added. When `false`, the arrival is logged and the
    # database is affected.
    # Default: **false**
    # @return [TrueClass | FalseClass]
    attr_accessor :test

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['client_id'] = 'ClientId'
      @_hash['location_id'] = 'LocationId'
      @_hash['arrival_type_id'] = 'ArrivalTypeId'
      @_hash['lead_channel_id'] = 'LeadChannelId'
      @_hash['test'] = 'Test'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        arrival_type_id
        lead_channel_id
        test
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(client_id = nil, location_id = nil, arrival_type_id = SKIP,
                   lead_channel_id = SKIP, test = SKIP)
      @client_id = client_id
      @location_id = location_id
      @arrival_type_id = arrival_type_id unless arrival_type_id == SKIP
      @lead_channel_id = lead_channel_id unless lead_channel_id == SKIP
      @test = test unless test == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      client_id = hash.key?('ClientId') ? hash['ClientId'] : nil
      location_id = hash.key?('LocationId') ? hash['LocationId'] : nil
      arrival_type_id =
        hash.key?('ArrivalTypeId') ? hash['ArrivalTypeId'] : SKIP
      lead_channel_id =
        hash.key?('LeadChannelId') ? hash['LeadChannelId'] : SKIP
      test = hash.key?('Test') ? hash['Test'] : SKIP

      # Create object from extracted values.
      AddArrivalRequest.new(client_id,
                            location_id,
                            arrival_type_id,
                            lead_channel_id,
                            test)
    end
  end
end
