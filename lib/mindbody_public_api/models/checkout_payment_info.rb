# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # CheckoutPaymentInfo Model.
  class CheckoutPaymentInfo < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The type of payment. Possible values are:
    # * CreditCard - Indicates that this payment item is a credit card.
    # * StoredCard - Indicates that this payment item is a credit card stored on
    # the client’s account.
    # * DirectDebit - Indicates that this payment item is a direct debit.
    # * EncryptedTrackData - Indicates that this payment item is a swiped credit
    # card.
    # * TrackData - Indicates that this payment item is a swiped credit card.
    # * DebitAccount - Indicates that funds should be debited from the client’s
    # account.
    # * Custom - Indicates that this payment item is a custom payment method
    # configured by the business.
    # * Comp - Indicates that this payment item is making all or part of the
    # cart’s total complementary.
    # * Cash - Indicates that this payment item is cash.
    # * Check - Indicates that this payment item is a check.
    # * GiftCard - Indicates that this payment item is a gift card.
    # @return [String]
    attr_accessor :type

    # Contains information about the cart’s payments. Possible values vary
    # according to the Type property, as below:
    # * CreditCard Keys - amount, creditCardNumber, expMonth, expYear, cvv,
    # billingName, billingAddress, billingCity, billingState, billingPostalCode,
    # saveInfo, cardId
    # * StoredCard Keys - amount, lastFour
    # * DirectDebit Keys - amount
    # * EncryptedTrackData Keys - amount, trackData
    # * TrackData Keys - amount, trackData
    # * DebitAccount Keys - amount
    # * Custom Keys - amount, id
    # * Comp Keys - amount
    # * Cash Keys - amount, notes
    # * Check Keys - amount, notes
    # * GiftCard - amount, notes, cardNumber
    # @return [Hash[String, Object]]
    attr_accessor :metadata

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'Type'
      @_hash['metadata'] = 'Metadata'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        type
        metadata
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(type = SKIP, metadata = SKIP)
      @type = type unless type == SKIP
      @metadata = metadata unless metadata == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('Type') ? hash['Type'] : SKIP
      metadata = hash.key?('Metadata') ? hash['Metadata'] : SKIP

      # Create object from extracted values.
      CheckoutPaymentInfo.new(type,
                              metadata)
    end
  end
end
