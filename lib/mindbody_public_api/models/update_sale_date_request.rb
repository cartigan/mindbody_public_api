# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module MindbodyPublicApi
  # Update Sales Date Request Model
  class UpdateSaleDateRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The Sale ID for which saleDate needs to be updated. This is the
    # `Sale[].Id` returned from GET Sales.
    # @return [Integer]
    attr_accessor :sale_id

    # The sale date which needs to be modified.
    # @return [DateTime]
    attr_accessor :sale_date

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['sale_id'] = 'SaleID'
      @_hash['sale_date'] = 'SaleDate'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        sale_id
        sale_date
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(sale_id = SKIP, sale_date = SKIP)
      @sale_id = sale_id unless sale_id == SKIP
      @sale_date = sale_date unless sale_date == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      sale_id = hash.key?('SaleID') ? hash['SaleID'] : SKIP
      sale_date = if hash.key?('SaleDate')
                    (DateTimeHelper.from_rfc3339(hash['SaleDate']) if hash['SaleDate'])
                  else
                    SKIP
                  end

      # Create object from extracted values.
      UpdateSaleDateRequest.new(sale_id,
                                sale_date)
    end

    def to_custom_sale_date
      DateTimeHelper.to_rfc3339(sale_date)
    end
  end
end
