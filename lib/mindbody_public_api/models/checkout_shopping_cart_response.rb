# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # CheckoutShoppingCartResponse Model.
  class CheckoutShoppingCartResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [ShoppingCart]
    attr_accessor :shopping_cart

    # Contains information about the classes.
    # @return [Array[Class]]
    attr_accessor :classes

    # Contains information about the appointments.
    # @return [Array[Appointment]]
    attr_accessor :appointments

    # Contains information about enrollment class schedules.
    # @return [Array[ClassSchedule]]
    attr_accessor :enrollments

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['shopping_cart'] = 'ShoppingCart'
      @_hash['classes'] = 'Classes'
      @_hash['appointments'] = 'Appointments'
      @_hash['enrollments'] = 'Enrollments'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        shopping_cart
        classes
        appointments
        enrollments
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(shopping_cart = SKIP, classes = SKIP, appointments = SKIP,
                   enrollments = SKIP)
      @shopping_cart = shopping_cart unless shopping_cart == SKIP
      @classes = classes unless classes == SKIP
      @appointments = appointments unless appointments == SKIP
      @enrollments = enrollments unless enrollments == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      shopping_cart = ShoppingCart.from_hash(hash['ShoppingCart']) if hash['ShoppingCart']
      # Parameter is an array, so we need to iterate through it
      classes = nil
      unless hash['Classes'].nil?
        classes = []
        hash['Classes'].each do |structure|
          classes << (Class.from_hash(structure) if structure)
        end
      end

      classes = SKIP unless hash.key?('Classes')
      # Parameter is an array, so we need to iterate through it
      appointments = nil
      unless hash['Appointments'].nil?
        appointments = []
        hash['Appointments'].each do |structure|
          appointments << (Appointment.from_hash(structure) if structure)
        end
      end

      appointments = SKIP unless hash.key?('Appointments')
      # Parameter is an array, so we need to iterate through it
      enrollments = nil
      unless hash['Enrollments'].nil?
        enrollments = []
        hash['Enrollments'].each do |structure|
          enrollments << (ClassSchedule.from_hash(structure) if structure)
        end
      end

      enrollments = SKIP unless hash.key?('Enrollments')

      # Create object from extracted values.
      CheckoutShoppingCartResponse.new(shopping_cart,
                                       classes,
                                       appointments,
                                       enrollments)
    end
  end
end
