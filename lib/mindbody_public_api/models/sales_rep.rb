# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # SalesRep Model.
  class SalesRep < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The first name of the sales representative.
    # @return [String]
    attr_accessor :first_name

    # The staff ID of the sales representative.
    # @return [Integer]
    attr_accessor :id

    # The last name of the sales representative.
    # @return [String]
    attr_accessor :last_name

    # This value is the number that identifies the type of sales representative
    # assigned to this client. One to six types of sales representatives can be
    # assigned to a client at any given time, depending on site settings.
    # @return [Integer]
    attr_accessor :sales_rep_number

    # A list of the different types of sales representative functions assigned
    # to this staff member.
    # @return [Array[Integer]]
    attr_accessor :sales_rep_numbers

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['first_name'] = 'FirstName'
      @_hash['id'] = 'Id'
      @_hash['last_name'] = 'LastName'
      @_hash['sales_rep_number'] = 'SalesRepNumber'
      @_hash['sales_rep_numbers'] = 'SalesRepNumbers'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        first_name
        id
        last_name
        sales_rep_number
        sales_rep_numbers
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(first_name = SKIP, id = SKIP, last_name = SKIP,
                   sales_rep_number = SKIP, sales_rep_numbers = SKIP)
      @first_name = first_name unless first_name == SKIP
      @id = id unless id == SKIP
      @last_name = last_name unless last_name == SKIP
      @sales_rep_number = sales_rep_number unless sales_rep_number == SKIP
      @sales_rep_numbers = sales_rep_numbers unless sales_rep_numbers == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      first_name = hash.key?('FirstName') ? hash['FirstName'] : SKIP
      id = hash.key?('Id') ? hash['Id'] : SKIP
      last_name = hash.key?('LastName') ? hash['LastName'] : SKIP
      sales_rep_number =
        hash.key?('SalesRepNumber') ? hash['SalesRepNumber'] : SKIP
      sales_rep_numbers =
        hash.key?('SalesRepNumbers') ? hash['SalesRepNumbers'] : SKIP

      # Create object from extracted values.
      SalesRep.new(first_name,
                   id,
                   last_name,
                   sales_rep_number,
                   sales_rep_numbers)
    end
  end
end
