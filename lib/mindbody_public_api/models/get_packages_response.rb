# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # GetPackagesResponse Model.
  class GetPackagesResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Contains information about the resulting packages.
    # @return [Array[Package]]
    attr_accessor :packages

    # Contains information about the pagination to use.
    # @return [PaginationResponse]
    attr_accessor :pagination_response

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['packages'] = 'Packages'
      @_hash['pagination_response'] = 'PaginationResponse'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        packages
        pagination_response
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(packages = SKIP, pagination_response = SKIP)
      @packages = packages unless packages == SKIP
      @pagination_response = pagination_response unless pagination_response == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      packages = nil
      unless hash['Packages'].nil?
        packages = []
        hash['Packages'].each do |structure|
          packages << (Package.from_hash(structure) if structure)
        end
      end

      packages = SKIP unless hash.key?('Packages')
      pagination_response = PaginationResponse.from_hash(hash['PaginationResponse']) if
        hash['PaginationResponse']

      # Create object from extracted values.
      GetPackagesResponse.new(packages,
                              pagination_response)
    end
  end
end
