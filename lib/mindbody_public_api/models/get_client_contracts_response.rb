# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # GetClientContractsResponse Model.
  class GetClientContractsResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Contains information about the pagination to use.
    # @return [PaginationResponse]
    attr_accessor :pagination_response

    # Contains the details of the clientâ€™s contract.
    # @return [Array[ClientContract]]
    attr_accessor :contracts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['pagination_response'] = 'PaginationResponse'
      @_hash['contracts'] = 'Contracts'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        pagination_response
        contracts
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(pagination_response = SKIP, contracts = SKIP)
      @pagination_response = pagination_response unless pagination_response == SKIP
      @contracts = contracts unless contracts == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      pagination_response = PaginationResponse.from_hash(hash['PaginationResponse']) if
        hash['PaginationResponse']
      # Parameter is an array, so we need to iterate through it
      contracts = nil
      unless hash['Contracts'].nil?
        contracts = []
        hash['Contracts'].each do |structure|
          contracts << (ClientContract.from_hash(structure) if structure)
        end
      end

      contracts = SKIP unless hash.key?('Contracts')

      # Create object from extracted values.
      GetClientContractsResponse.new(pagination_response,
                                     contracts)
    end
  end
end
