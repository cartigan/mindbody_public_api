# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Add Staff Availability/Unavailability Schedule
  class AddStaffAvailabilityRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The ID of the staff member that availability or unavailability will be
    # added.
    # @return [Integer]
    attr_accessor :staff_id

    # When `true`, indicates that availability will be added, <br />
    # When `false`, indicates that unavailability will be added.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_availability

    # The description of the unavailability, ex. Lunch, Vacation. Required if
    # IsAvailability passed as `false`.
    # Omit if IsAvailability passed as `true`.
    # @return [String]
    attr_accessor :description

    # A list of program IDs. Must be a valid active schedulable Program ID.
    # Required if IsAvailability passed as `true`. 
    # Omit if IsAvailability passed as `false`.
    # @return [Array[Integer]]
    attr_accessor :program_ids

    # The ID of the location where the availability is added. Required if
    # IsAvailability passed as `true`.
    # Omit if IsAvailability passed as `false`.
    # @return [Integer]
    attr_accessor :location_id

    # The days of the week. Must contain at least one of the following Sunday,
    # Monday, Tuesday etc.
    # @return [Array[String]]
    attr_accessor :days_of_week

    # The start time of the schedule. Must be in HH:MM:SS format.
    # @return [String]
    attr_accessor :start_time

    # The end time of the schedule. Must be in HH:MM:SS format.
    # @return [String]
    attr_accessor :end_time

    # The start date of the schedule. Must be in YYYY-MM-DD format.
    # @return [String]
    attr_accessor :start_date

    # The end date of the schedule. Must be in YYYY-MM-DD format.
    # @return [String]
    attr_accessor :end_date

    # The status of availability or unavailability. Possible values are:
    # * Masked
    # * Hidden
    # * Public
    # Default: Public
    # @return [String]
    attr_accessor :status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['staff_id'] = 'StaffId'
      @_hash['is_availability'] = 'IsAvailability'
      @_hash['description'] = 'Description'
      @_hash['program_ids'] = 'ProgramIds'
      @_hash['location_id'] = 'LocationId'
      @_hash['days_of_week'] = 'DaysOfWeek'
      @_hash['start_time'] = 'StartTime'
      @_hash['end_time'] = 'EndTime'
      @_hash['start_date'] = 'StartDate'
      @_hash['end_date'] = 'EndDate'
      @_hash['status'] = 'Status'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        description
        program_ids
        location_id
        status
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(staff_id = nil, is_availability = nil, days_of_week = nil,
                   start_time = nil, end_time = nil, start_date = nil,
                   end_date = nil, description = SKIP, program_ids = SKIP,
                   location_id = SKIP, status = SKIP)
      @staff_id = staff_id
      @is_availability = is_availability
      @description = description unless description == SKIP
      @program_ids = program_ids unless program_ids == SKIP
      @location_id = location_id unless location_id == SKIP
      @days_of_week = days_of_week
      @start_time = start_time
      @end_time = end_time
      @start_date = start_date
      @end_date = end_date
      @status = status unless status == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      staff_id = hash.key?('StaffId') ? hash['StaffId'] : nil
      is_availability =
        hash.key?('IsAvailability') ? hash['IsAvailability'] : nil
      days_of_week = hash.key?('DaysOfWeek') ? hash['DaysOfWeek'] : nil
      start_time = hash.key?('StartTime') ? hash['StartTime'] : nil
      end_time = hash.key?('EndTime') ? hash['EndTime'] : nil
      start_date = hash.key?('StartDate') ? hash['StartDate'] : nil
      end_date = hash.key?('EndDate') ? hash['EndDate'] : nil
      description = hash.key?('Description') ? hash['Description'] : SKIP
      program_ids = hash.key?('ProgramIds') ? hash['ProgramIds'] : SKIP
      location_id = hash.key?('LocationId') ? hash['LocationId'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP

      # Create object from extracted values.
      AddStaffAvailabilityRequest.new(staff_id,
                                      is_availability,
                                      days_of_week,
                                      start_time,
                                      end_time,
                                      start_date,
                                      end_date,
                                      description,
                                      program_ids,
                                      location_id,
                                      status)
    end
  end
end
