# mindbody_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MindbodyPublicApi
  # Get AddOns Response Model
  class GetAddOnsResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Contains information about the pagination to use.
    # @return [PaginationResponse]
    attr_accessor :pagination_response

    # A list of available add-ons.
    # @return [Array[AppointmentAddOn]]
    attr_accessor :add_ons

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['pagination_response'] = 'PaginationResponse'
      @_hash['add_ons'] = 'AddOns'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        pagination_response
        add_ons
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(pagination_response = SKIP, add_ons = SKIP)
      @pagination_response = pagination_response unless pagination_response == SKIP
      @add_ons = add_ons unless add_ons == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      pagination_response = PaginationResponse.from_hash(hash['PaginationResponse']) if
        hash['PaginationResponse']
      # Parameter is an array, so we need to iterate through it
      add_ons = nil
      unless hash['AddOns'].nil?
        add_ons = []
        hash['AddOns'].each do |structure|
          add_ons << (AppointmentAddOn.from_hash(structure) if structure)
        end
      end

      add_ons = SKIP unless hash.key?('AddOns')

      # Create object from extracted values.
      GetAddOnsResponse.new(pagination_response,
                            add_ons)
    end
  end
end
